inoremap	kj	<Esc>

inoremap	<Left>	<NOP>
inoremap	<Down>	<NOP>
inoremap	<Up>	<NOP>
inoremap	<Right>	<NOP>

:syntax on
:set autoindent
:set smartindent
:set autowrite
:set sw=4
:set number
:map #2 :set nonumber
:set tabstop=4 shiftwidth=4 expandtab

:ab Xln Console.OUT.println()
    :ab Xfori for (var i : Int = 0; i)
    :ab Xforj for (var j : Int = 0; j)


    inoremap ( ()<Esc>i
            inoremap [ []<Esc>i
            inoremap { {<CR>}<Esc>O
            autocmd Syntax html,vim inoremap < <lt>><Esc>i| inoremap > <c-r>=ClosePair('>')<CR>
            inoremap ) <c-r>=ClosePair(')')<CR>
        inoremap ] <c-r>=ClosePair(']')<CR>
        inoremap } <c-r>=CloseBracket()<CR>
        inoremap " <c-r>=QuoteDelim('"')<CR>
        inoremap ' <c-r>=QuoteDelim("'")<CR>

function ClosePair(char)
    if getline('.')[col('.') - 1] == a:char
    return "\<Right>"
    else
    return a:char
    endif
    endf

function CloseBracket()
    if match(getline(line('.') + 1), '\s*}') < 0
    return "\<CR>}"
    else
    return "\<Esc>j0f}a"
    endif
    endf

function QuoteDelim(char)
    let line = getline('.')
    let col = col('.')
    if line[col - 2] == "\\"
    "Inserting a quoted quotation mark into the string
    return a:char
    elseif line[col - 1] == a:char
    "Escaping out of the string
    return "\<Right>"
    else
    "Starting a string
    return a:char.a:char."\<Esc>i"
    endif
    endf
