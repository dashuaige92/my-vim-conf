!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
"_ddgg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal "_ddgg$/;"	m
%	bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'n') <CR>$/;"	m
%	bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> %  v:<C-U>call <SID>Match_wrapper('',1,'o') <CR>$/;"	m
%	bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> %  :<C-U>call <SID>Match_wrapper('',1,'v') <CR>m'gv``$/;"	m
%	bundle/vim-matchit/plugin/python_match.vim	/^nnoremap <buffer> <silent> %  :<C-U>call <SID>PyMatch('%','n') <CR>$/;"	m
%	bundle/vim-matchit/plugin/python_match.vim	/^onoremap <buffer> <silent> %  v:<C-U>call <SID>PyMatch('%','o') <CR>$/;"	m
%	bundle/vim-matchit/plugin/python_match.vim	/^vnoremap <buffer> <silent> %  :<C-U>call <SID>PyMatch('%','v') <CR>m'gv``$/;"	m
.	bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> .     :<C-U>call <SID>repeat(v:count)<CR>$/;"	m
<C-Down>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-Down>  <C-W>j$/;"	m
<C-G>S	bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>S <Plug>ISurround$/;"	m
<C-G>s	bundle/vim-surround/plugin/surround.vim	/^  imap      <C-G>s <Plug>Isurround$/;"	m
<C-H>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-H> <C-W>h$/;"	m
<C-J>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-J> <C-W>j$/;"	m
<C-K>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-K> <C-W>k$/;"	m
<C-L>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-L> <C-W>l$/;"	m
<C-Left>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-Left>  <C-W>h$/;"	m
<C-R>	bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> <C-R> :<C-U>call <SID>wrap("\\<Lt>C-R>",v:count)<CR>$/;"	m
<C-Right>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-Right> <C-W>l$/;"	m
<C-S-TAB>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-S-TAB> :call <SID>CycleBuffer(0)<CR>:<BS>$/;"	m
<C-S-TAB>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-S-TAB> <C-W>W$/;"	m
<C-S>	bundle/vim-surround/plugin/surround.vim	/^    imap    <C-S> <Plug>Isurround$/;"	m
<C-TAB>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-TAB>   :call <SID>CycleBuffer(1)<CR>:<BS>$/;"	m
<C-TAB>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-TAB>   <C-W>w$/;"	m
<C-Up>	bundle/minibufexpl/plugin/minibufexpl.vim	/^  noremap <C-Up>    <C-W>k$/;"	m
<C-V>%	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-V>%      <Plug>ragtagUrlV$/;"	m
<C-V>&	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-V>&      <Plug>ragtagXmlV$/;"	m
<C-X>%	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-X>%      <Plug>ragtagUrlEncode$/;"	m
<C-X>&	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-X>&      <Plug>ragtagXmlEncode$/;"	m
<C-X>/	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-X>\/    <\/<Plug>ragtagHtmlComplete$/;"	m
<C-X>H	bundle/vim-ragtag/plugin/ragtag.vim	/^  imap     <C-X>H      <Plug>ragtagHtmlComplete$/;"	m
<Enter>	bundle/multiselect/plugin/multiselect.vim	/^  vnoremap <Enter> m`:MSInvert<Enter>``$/;"	m
<F12>	bundle/vim-togglemouse/plugin/toggle_mouse.vim	/^        inoremap <F12> <Esc>:call <SID>ToggleMouse()<CR>a$/;"	m
<F12>	bundle/vim-togglemouse/plugin/toggle_mouse.vim	/^        noremap <F12> :call <SID>ToggleMouse()<CR>$/;"	m
<Leader>a	bundle/autoclose/plugin/autoclose.vim	/^    nmap <unique> <Leader>a <Plug>ToggleAutoCloseMappings$/;"	m
<Leader>bd	bundle/bclose/plugin/bclose-old.vim	/^nnoremap <silent> <Leader>bd :Bclose<CR>$/;"	m
<Leader>mbc	bundle/minibufexpl/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbc <Plug>CMiniBufExplorer$/;"	m
<Leader>mbe	bundle/minibufexpl/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbe <Plug>MiniBufExplorer$/;"	m
<Leader>mbt	bundle/minibufexpl/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbt <Plug>TMiniBufExplorer$/;"	m
<Leader>mbu	bundle/minibufexpl/plugin/minibufexpl.vim	/^  map <unique> <Leader>mbu <Plug>UMiniBufExplorer$/;"	m
<Plug>CMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>CMiniBufExplorer :call <SID>StopExplorer(1)<CR>:<BS>$/;"	m
<Plug>Csurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Csurround  :<C-U>call <SID>changesurround()<CR>$/;"	m
<Plug>Dsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Dsurround  :<C-U>call <SID>dosurround(<SID>inputtarget())<CR>$/;"	m
<Plug>ISurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>ISurround  <C-R>=<SID>insert(1)<CR>$/;"	m
<Plug>Isurround	bundle/vim-surround/plugin/surround.vim	/^inoremap <silent> <Plug>Isurround  <C-R>=<SID>insert()<CR>$/;"	m
<Plug>Kwbd	bundle/bclose/plugin/bclose.vim	/^nnoremap <silent> <Plug>Kwbd :<C-u>Kwbd<CR>$/;"	m
<Plug>MiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>MiniBufExplorer  :call <SID>StartExplorer(1, -1)<CR>:<BS>$/;"	m
<Plug>NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeMirrorToggle :call <SID>NERDTreeMirrorToggle()$/;"	m
<Plug>NERDTreeTabsToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^noremap <silent> <script> <Plug>NERDTreeTabsToggle :call <SID>NERDTreeToggleAllTabs()$/;"	m
<Plug>TMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>TMiniBufExplorer :call <SID>ToggleExplorer()<CR>:<BS>$/;"	m
<Plug>ToggleAutoCloseMappings	bundle/autoclose/plugin/autoclose.vim	/^nmap <Plug>ToggleAutoCloseMappings :call <SID>ToggleAutoCloseMappings()<CR>$/;"	m
<Plug>UMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^noremap <unique> <script> <Plug>UMiniBufExplorer :call <SID>AutoUpdate(-1)<CR>:<BS>$/;"	m
<Plug>VSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VSurround  :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 1 : 0)<CR>$/;"	m
<Plug>VgSurround	bundle/vim-surround/plugin/surround.vim	/^vnoremap <silent> <Plug>VgSurround :<C-U>call <SID>opfunc(visualmode(),visualmode() ==# 'V' ? 0 : 1)<CR>$/;"	m
<Plug>YSsurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSsurround :<C-U>call <SID>opfunc2(v:count1)<CR>$/;"	m
<Plug>YSurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>YSurround  :<C-U>set opfunc=<SID>opfunc2<CR>g@$/;"	m
<Plug>Yssurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Yssurround :<C-U>call <SID>opfunc(v:count1)<CR>$/;"	m
<Plug>Ysurround	bundle/vim-surround/plugin/surround.vim	/^nnoremap <silent> <Plug>Ysurround  :<C-U>set opfunc=<SID>opfunc<CR>g@$/;"	m
<Plug>ragtagBSUrl	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagBSUrl     <C-R>=<SID>bspattern('%\\x\\x\\=\\<Bar>&amp;')<CR>$/;"	m
<Plug>ragtagBSXml	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagBSXml     <C-R>=<SID>bspattern('&#\\=\\w*;\\<Bar><[^><]*>\\=')<CR>$/;"	m
<Plug>ragtagHtmlComplete	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagHtmlComplete <C-R>=<SID>htmlEn()<CR><C-X><C-O><C-P><C-R>=<SID>htmlDis()<CR><C-N>$/;"	m
<Plug>ragtagUrlEncode	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagUrlEncode <C-R>=<SID>toggleurlescape()<CR>$/;"	m
<Plug>ragtagUrlV	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagUrlV      <C-R>=<SID>urlv()<CR>$/;"	m
<Plug>ragtagXmlEncode	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagXmlEncode <C-R>=<SID>togglexmlescape()<CR>$/;"	m
<Plug>ragtagXmlV	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <Plug>ragtagXmlV      <C-R>="&#".getchar().";"<CR>$/;"	m
<SID>ragtagUrlEncode	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent>  <SID>ragtagUrlEncode <C-R>=<SID>toggleurlescape()<CR>$/;"	m
<SID>ragtagXmlEncode	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent>  <SID>ragtagXmlEncode <C-R>=<SID>togglexmlescape()<CR>$/;"	m
<SID>urlspace	bundle/vim-ragtag/plugin/ragtag.vim	/^inoremap <silent> <SID>urlspace <C-R>=<SID>getinput()=~?'\\%([?&]\\<Bar>&amp;\\)[%a-z0-9._~+-]*=[%a-z0-9._~+-]*$'?'+':'%20'<CR>$/;"	m
<SID>xx	bundle/taglist/plugin/taglist.vim	/^    map <SID>xx <SID>xx$/;"	m
<c-r><tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <c-r><tab> <c-r>=ShowAvailableSnips()<cr>$/;"	m
<plug>NERDCommenterAltDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^nnoremap <plug>NERDCommenterAltDelims :call <SID>SwitchToAlternativeDelimiters(1)<cr>$/;"	m
<s-tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <s-tab> <c-r>=BackwardsSnippet()<cr>$/;"	m
<tab>	bundle/snipmate.vim/after/plugin/snipMate.vim	/^ino <silent> <tab> <c-r>=TriggerSnippet()<cr>$/;"	m
ABOVE_NORMAL_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^ABOVE_NORMAL_PRIORITY_CLASS = 0x00008000$/;"	v
AUTOL	bundle/delimitMate/Makefile	/^AUTOL=autoload\/$(PLUGIN).vim$/;"	m
AddLeftDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelim(delim, theLine)$/;"	f
AddLeftDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddLeftDelimAligned(delim, theLine, alignIndx)$/;"	f
AddMap	bundle/multiselect/plugin/multiselect.vim	/^function! s:AddMap(name, map, cmd, mode, silent)$/;"	f
AddRightDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelim(delim, theLine)$/;"	f
AddRightDelimAligned	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AddRightDelimAligned(delim, theLine, alignIndx)$/;"	f
AddScopedTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:AddScopedTags(tags, processedtags, parent, depth,$/;"	f
AllmlInit	bundle/vim-ragtag/plugin/ragtag.vim	/^function! AllmlInit()$/;"	f
AltMultipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AltMultipart()$/;"	f
AppendCommentToLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:AppendCommentToLine()$/;"	f
AssertEquals	bundle/conque-read-only/tests/test.vim	/^function! AssertEquals(a, b) " {{{$/;"	f
AssertFalse	bundle/conque-read-only/tests/test.vim	/^function! AssertFalse(a) " {{{$/;"	f
AssertTrue	bundle/conque-read-only/tests/test.vim	/^function! AssertTrue(a) " {{{$/;"	f
AutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:AutoClose() "{{{$/;"	f
AutoUpdate	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>AutoUpdate(delBufNum)$/;"	f
AutoUpdate	bundle/tagbar/autoload/tagbar.vim	/^function! s:AutoUpdate(fname)$/;"	f
BELOW_NORMAL_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^BELOW_NORMAL_PRIORITY_CLASS = 0x00004000$/;"	v
BackwardsSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! BackwardsSnippet()$/;"	f
BaseTag._getPrefix	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._getPrefix() dict$/;"	f
BaseTag._init	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag._init(name) dict$/;"	f
BaseTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.closeFold() dict$/;"	f
BaseTag.getClosedParentTline	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getClosedParentTline() dict$/;"	f
BaseTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.getPrototype() dict$/;"	f
BaseTag.initFoldState	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.initFoldState() dict$/;"	f
BaseTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFoldable() dict$/;"	f
BaseTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isFolded() dict$/;"	f
BaseTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isKindheader() dict$/;"	f
BaseTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isNormalTag() dict$/;"	f
BaseTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.isPseudoTag() dict$/;"	f
BaseTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openFold() dict$/;"	f
BaseTag.openParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.openParents() dict$/;"	f
BaseTag.setFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:BaseTag.setFolded(folded) dict$/;"	f
Bclose	bundle/bclose/plugin/bclose-old.vim	/^command! -bang -complete=buffer -nargs=? Bclose call <SID>Bclose('<bang>', '<args>')$/;"	c
Bclose	bundle/bclose/plugin/bclose-old.vim	/^function! s:Bclose(bang, buffer)$/;"	f
BinSearchToAppend	bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend(start, end, line, cmp, direction)$/;"	f
BinSearchToAppend2	bundle/genutils/autoload/genutils.vim	/^function! s:BinSearchToAppend2(start, end, line, cmp, direction, accessor,$/;"	f
Blame	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Blame(bang,line1,line2,count,args) abort$/;"	f
BlameCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameCommit(cmd) abort$/;"	f
BlameJump	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameJump(suffix) abort$/;"	f
BlameSyntax	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BlameSyntax() abort$/;"	f
Bookmark.AddBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.AddBookmark(name, path)$/;"	f
Bookmark.BookmarkExistsFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkExistsFor(name)$/;"	f
Bookmark.BookmarkFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkFor(name)$/;"	f
Bookmark.BookmarkNames	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.BookmarkNames()$/;"	f
Bookmark.Bookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Bookmarks()$/;"	f
Bookmark.CacheBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.CacheBookmarks(silent)$/;"	f
Bookmark.ClearAll	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ClearAll()$/;"	f
Bookmark.GetNodeForName	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetNodeForName(name, searchFromAbsoluteRoot)$/;"	f
Bookmark.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.GetSelected()$/;"	f
Bookmark.InvalidBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.InvalidBookmarks()$/;"	f
Bookmark.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.New(name, path)$/;"	f
Bookmark.Sort	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Sort()$/;"	f
Bookmark.ToRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.ToRoot(name)$/;"	f
Bookmark.Write	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.Write()$/;"	f
Bookmark.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.activate()$/;"	f
Bookmark.compareTo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.compareTo(otherbookmark)$/;"	f
Bookmark.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.delete()$/;"	f
Bookmark.getNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.getNode(searchFromAbsoluteRoot)$/;"	f
Bookmark.mustExist	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.mustExist()$/;"	f
Bookmark.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.openInNewTab(options)$/;"	f
Bookmark.setPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.setPath(path)$/;"	f
Bookmark.str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.str()$/;"	f
Bookmark.toRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.toRoot()$/;"	f
Bookmark.validate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Bookmark.validate()$/;"	f
Browse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Browse(bang,line1,count,...) abort$/;"	f
BufLineAccessor	bundle/genutils/autoload/genutils.vim	/^function! s:BufLineAccessor(line, context)$/;"	f
BufLineMover	bundle/genutils/autoload/genutils.vim	/^function! s:BufLineMover(from, to, context)$/;"	f
BufLineSwapper	bundle/genutils/autoload/genutils.vim	/^function! s:BufLineSwapper(line1, line2, context)$/;"	f
BufReadIndex	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndex()$/;"	f
BufReadIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadIndexFile()$/;"	f
BufReadObject	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufReadObject()$/;"	f
BufWriteIndexFile	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:BufWriteIndexFile()$/;"	f
BuildBufferList	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>BuildBufferList(delBufNum, updateBufList)$/;"	f
BuildTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:BuildTabStops(snip, lnum, col, indent)$/;"	f
CAPSLOCK_ON	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CAPSLOCK_ON = 0x0080$/;"	v
CHAR_INFO	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class CHAR_INFO(Structure):$/;"	c
CHAR_UNION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class CHAR_UNION(Union):$/;"	c
CMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! CMiniBufExplorer  call <SID>StopExplorer(1)$/;"	c
CONQUE_COLOR_SEQUENCE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_COLOR_SEQUENCE = ($/;"	v
CONQUE_CTL	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_CTL = {$/;"	v
CONQUE_ESCAPE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE = {$/;"	v
CONQUE_ESCAPE_CHARSET	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_CHARSET = {$/;"	v
CONQUE_ESCAPE_HASH	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_HASH = {$/;"	v
CONQUE_ESCAPE_PLAIN	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_PLAIN = {$/;"	v
CONQUE_ESCAPE_QUESTION	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_ESCAPE_QUESTION = {$/;"	v
CONQUE_FONT	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_FONT = {$/;"	v
CONQUE_GRAPHICS_SET	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_GRAPHICS_SET = [$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = 'C:\/Documents and Settings\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^    CONQUE_LOG_FILENAME = '\/Users\/nraffo\/vimfiles\/pylog.log' # DEBUG$/;"	v
CONQUE_LOG_FILENAME	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_FILENAME = None # DEBUG$/;"	v
CONQUE_LOG_LEVEL	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_LOG_LEVEL = logging.INFO #DEBUG$/;"	v
CONQUE_MAX_SYNTAX_LINES	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_MAX_SYNTAX_LINES = 200$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_PYTHON_VERSION	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^CONQUE_PYTHON_VERSION = sys.version_info[0]$/;"	v
CONQUE_SEQ_REGEX	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX = re.compile("(\\x1b\\[?\\??#?[0-9;]*[a-zA-Z0-9@=>]|\\x1b\\][0-9];.*?\\x07|[\\x01-\\x0f]|\\x1b\\([AB0])")$/;"	v
CONQUE_SEQ_REGEX_CHAR	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CHAR = re.compile("^\\x1b[()]")$/;"	v
CONQUE_SEQ_REGEX_CSI	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CSI = re.compile("^\\x1b\\[")$/;"	v
CONQUE_SEQ_REGEX_CTL	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_CTL = re.compile("^[\\x01-\\x0f]$")$/;"	v
CONQUE_SEQ_REGEX_ESC	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_ESC = re.compile("^\\x1b.$")$/;"	v
CONQUE_SEQ_REGEX_HASH	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_HASH = re.compile("^\\x1b#")$/;"	v
CONQUE_SEQ_REGEX_TITLE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SEQ_REGEX_TITLE = re.compile("^\\x1b\\]")$/;"	v
CONQUE_SOLE_BUFFER_LENGTH	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_LENGTH = 1000$/;"	v
CONQUE_SOLE_BUFFER_REDRAW	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_BUFFER_REDRAW = 500$/;"	v
CONQUE_SOLE_COMMANDS_SIZE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_COMMANDS_SIZE = 255$/;"	v
CONQUE_SOLE_INPUT_SIZE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_INPUT_SIZE = 1000$/;"	v
CONQUE_SOLE_MEM_REDRAW	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_MEM_REDRAW = 1000$/;"	v
CONQUE_SOLE_RESCROLL_SIZE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESCROLL_SIZE = 255$/;"	v
CONQUE_SOLE_RESIZE_SIZE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_RESIZE_SIZE = 255$/;"	v
CONQUE_SOLE_SCREEN_REDRAW	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_SCREEN_REDRAW = 50$/;"	v
CONQUE_SOLE_STATS_SIZE	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_SOLE_STATS_SIZE = 1000$/;"	v
CONQUE_TABLE_OUTPUT	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_TABLE_OUTPUT = re.compile("^\\s*\\|\\s.*\\s\\|\\s*$|^\\s*\\+[=+-]+\\+\\s*$")$/;"	v
CONQUE_VIM_ENCODING	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = 'utf-8'$/;"	v
CONQUE_VIM_ENCODING	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^    CONQUE_VIM_ENCODING = vim.eval('&encoding')$/;"	v
CONQUE_VK_ATTR_CTRL_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_VK_ATTR_CTRL_PRESSED = u('1024')$/;"	v
CONQUE_WIN32_REGEX_ATTR	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_ATTR = re.compile("((.)\\\\2*)", re.DOTALL)$/;"	v
CONQUE_WIN32_REGEX_VK	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^CONQUE_WIN32_REGEX_VK = re.compile("(\\x1b\\[[0-9;]+VK)")$/;"	v
CONQUE_WINDOWS_VK	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK = {$/;"	v
CONQUE_WINDOWS_VK_ENHANCED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_ENHANCED = {$/;"	v
CONQUE_WINDOWS_VK_INV	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CONQUE_WINDOWS_VK_INV = dict([v, k] for k, v in CONQUE_WINDOWS_VK.items())$/;"	v
CONSOLE_SCREEN_BUFFER_INFO	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class CONSOLE_SCREEN_BUFFER_INFO(Structure):$/;"	c
COORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class COORD(Structure):$/;"	c
CREATE_BREAKAWAY_FROM_JOB	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_BREAKAWAY_FROM_JOB = 0x01000000$/;"	v
CREATE_DEFAULT_ERROR_MODE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_DEFAULT_ERROR_MODE = 0x04000000$/;"	v
CREATE_NEW_CONSOLE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_CONSOLE = 0x00000010$/;"	v
CREATE_NEW_PROCESS_GROUP	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_NEW_PROCESS_GROUP = 0x00000200$/;"	v
CREATE_NO_WINDOW	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_NO_WINDOW = 0x08000000$/;"	v
CREATE_PRESERVE_CODE_AUTHZ_LEVEL	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_PRESERVE_CODE_AUTHZ_LEVEL = 0x02000000$/;"	v
CREATE_PROTECTED_PROCESS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_PROTECTED_PROCESS = 0x00040000$/;"	v
CREATE_SEPARATE_WOW_VDM	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_SEPARATE_WOW_VDM = 0x00000800$/;"	v
CREATE_SHARED_WOW_VDM	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_SHARED_WOW_VDM = 0x00001000$/;"	v
CREATE_SUSPENDED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_SUSPENDED = 0x00000004$/;"	v
CREATE_UNICODE_ENVIRONMENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^CREATE_UNICODE_ENVIRONMENT = 0x00000400$/;"	v
CanCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanCommentLine(forceNested, lineNum)$/;"	f
CanPlaceCursor	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanPlaceCursor(line, col)$/;"	f
CanSexyCommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanSexyCommentLines(topline, bottomline)$/;"	f
CanToggleCommentLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CanToggleCommentLine(forceNested, lineNum)$/;"	f
Char2Num	bundle/genutils/autoload/genutils.vim	/^function! s:Char2Num(c)$/;"	f
CheckExCtagsVersion	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckExCtagsVersion(output)$/;"	f
CheckFTCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckFTCtags(bin, ftype)$/;"	f
CheckForExCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckForExCtags()$/;"	f
CheckMouseClick	bundle/tagbar/autoload/tagbar.vim	/^function! s:CheckMouseClick()$/;"	f
Choose	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Choose(patterns, string, comma, branch, prefix, suffix, ...)$/;"	f
ChooseSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ChooseSnippet(scope, trigger)$/;"	f
CleanUp	bundle/tagbar/autoload/tagbar.vim	/^function! s:CleanUp()$/;"	f
CleanUp	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:CleanUp(options, mode, startline, startcol, ...)$/;"	f
CleanUp	bundle/vim-matchit/plugin/python_match.vim	/^fun! s:CleanUp(options, mode, ...)$/;"	f
CleanupFileinfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:CleanupFileinfo(fname)$/;"	f
Close	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^fun! Close()$/;"	f
CloseFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseFold()$/;"	f
CloseIfOnlyNerdTreeLeft	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:CloseIfOnlyNerdTreeLeft()$/;"	f
CloseStackPop	bundle/autoclose/plugin/autoclose.vim	/^function <SID>CloseStackPop(char) " ---{{{2$/;"	f
CloseStackPush	bundle/autoclose/plugin/autoclose.vim	/^function <SID>CloseStackPush(char) " ---{{{2$/;"	f
CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:CloseWindow()$/;"	f
CommentBlock	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentBlock(top, bottom, lSide, rSide, forceNested )$/;"	f
CommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLines(forceNested, align, firstLine, lastLine)$/;"	f
CommentLinesMinimal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesMinimal(firstLine, lastLine)$/;"	f
CommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesSexy(topline, bottomline)$/;"	f
CommentLinesToggle	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentLinesToggle(forceNested, firstLine, lastLine)$/;"	f
CommentRegion	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CommentRegion(topLine, topCol, bottomLine, bottomCol, forceNested)$/;"	f
Commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Commit(args) abort$/;"	f
CommitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:CommitComplete(A,L,P) abort$/;"	f
CompareByKind	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByKind(tag1, tag2)$/;"	f
CompareByLine	bundle/tagbar/autoload/tagbar.vim	/^function! s:CompareByLine(tag1, tag2)$/;"	f
CompareSelection	bundle/multiselect/autoload/multiselect.vim	/^function! s:CompareSelection(sel1, sel2)$/;"	f
Conque	bundle/conque-read-only/autoload/conque_term/conque.py	/^class Conque:$/;"	c
ConqueScreen	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^class ConqueScreen(object):$/;"	c
ConqueSole	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^class ConqueSole(Conque):$/;"	c
ConqueSoleSharedMemory	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^class ConqueSoleSharedMemory():$/;"	c
ConqueSoleSubprocess	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^class ConqueSoleSubprocess():$/;"	c
ConqueSoleWrapper	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^class ConqueSoleWrapper():$/;"	c
ConqueSubprocess	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^class ConqueSubprocess:$/;"	c
ConqueTerm	bundle/conque-read-only/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTerm call conque_term#open(<q-args>)$/;"	c
ConqueTermSplit	bundle/conque-read-only/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermSplit call conque_term#open(<q-args>, ['belowright split'])$/;"	c
ConqueTermTab	bundle/conque-read-only/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermTab call conque_term#open(<q-args>, ['tabnew'])$/;"	c
ConqueTermVSplit	bundle/conque-read-only/plugin/conque_term.vim	/^command! -nargs=+ -complete=shellcmd ConqueTermVSplit call conque_term#open(<q-args>, ['belowright vsplit'])$/;"	c
ConsolidateSelections	bundle/multiselect/autoload/multiselect.vim	/^function! s:ConsolidateSelections() " {{{$/;"	f
ConvertLeadingSpacesToTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingSpacesToTabs(line)$/;"	f
ConvertLeadingTabsToSpaces	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingTabsToSpaces(line)$/;"	f
ConvertLeadingWhiteSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ConvertLeadingWhiteSpace(line)$/;"	f
Count	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:Count(haystack, needle)$/;"	f
Count	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Count(string, pattern, ...)$/;"	f
CountNonESCedOccurances	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CountNonESCedOccurances(str, searchstr, escChar)$/;"	f
CreateAutocommands	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreateAutocommands()$/;"	f
CreateDelimMapFromCms	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:CreateDelimMapFromCms()$/;"	f
CreateMaps	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! s:CreateMaps(modes, target, desc, combo)$/;"	f
CreatePseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:CreatePseudoTag(name, parent, scope, typeinfo, fileinfo)$/;"	f
CycleBuffer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>CycleBuffer(forward)$/;"	f
DEBUG	bundle/conque-read-only/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
DEBUG	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
DEBUG	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
DEBUG	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
DEBUG	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>DEBUG(msg, level)$/;"	f
DEBUG_ONLY_THIS_PROCESS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^DEBUG_ONLY_THIS_PROCESS = 0x00000002$/;"	v
DEBUG_PROCESS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^DEBUG_PROCESS = 0x00000001$/;"	v
DETACHED_PROCESS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^DETACHED_PROCESS = 0x00000008$/;"	v
DOC	bundle/delimitMate/Makefile	/^DOC=$(wildcard doc\/*.txt)$/;"	m
DefineSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:DefineSnips(dir, aliasft, realft)$/;"	f
DelimitMateDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateDo(...) "{{{$/;"	f
DelimitMateReload	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateReload call s:DelimitMateDo(1)$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateSwitch call s:DelimitMateSwitch()$/;"	c
DelimitMateSwitch	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:DelimitMateSwitch() "{{{$/;"	f
DelimitMateTest	bundle/delimitMate/plugin/delimitMate.vim	/^command! -bar DelimitMateTest silent call s:TestMappingsDo()$/;"	c
Detect	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Detect(path)$/;"	f
DetectFiletype	bundle/tagbar/autoload/tagbar.vim	/^function! s:DetectFiletype(bufnr)$/;"	f
Diff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Diff(bang,...) abort$/;"	f
DirComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:DirComplete(A,L,P) abort$/;"	f
DisplayBuffers	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>DisplayBuffers(delBufNum)$/;"	f
DoesBlockHaveDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveDelim(delim, top, bottom)$/;"	f
DoesBlockHaveMultipartDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:DoesBlockHaveMultipartDelim(top, bottom)$/;"	f
DrawSelections	bundle/multiselect/autoload/multiselect.vim	/^function! s:DrawSelections() " {{{$/;"	f
ENHANCED_KEY	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^ENHANCED_KEY = 0x0100$/;"	v
EXTENDED_STARTUPINFO_PRESENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^EXTENDED_STARTUPINFO_PRESENT = 0x00080000$/;"	v
Edit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Edit(cmd,bang,...) abort$/;"	f
EditComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditComplete(A,L,P) abort$/;"	f
EditRunComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:EditRunComplete(A,L,P) abort$/;"	f
EndOfBlock	bundle/vim-matchit/plugin/python_match.vim	/^fun! s:EndOfBlock(start)$/;"	f
Esc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Esc(str)$/;"	f
EscapeCtagsCmd	bundle/tagbar/autoload/tagbar.vim	/^function! s:EscapeCtagsCmd(ctags_bin, args, ...)$/;"	f
ExecWinCmdNoEa	bundle/genutils/autoload/genutils.vim	/^function! s:ExecWinCmdNoEa(winCmd)$/;"	f
ExecuteCtags	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtags(ctags_cmd)$/;"	f
ExecuteCtagsOnFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ExecuteCtagsOnFile(fname, ftype)$/;"	f
ExecuteInTree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExecuteInTree(cmd) abort$/;"	f
ExtraMappings	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:ExtraMappings() "{{{$/;"	f
ExtractGitDir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ExtractGitDir(path) abort$/;"	f
ExtractSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnips(dir, ft)$/;"	f
ExtractSnipsFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ExtractSnipsFile(file, ft)$/;"	f
FILL_CHAR	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    FILL_CHAR = None$/;"	v	class:ConqueSoleSharedMemory
FOCUS_EVENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^FOCUS_EVENT = 0x0010$/;"	v
FOCUS_EVENT_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class FOCUS_EVENT_RECORD(Structure):$/;"	c
FileInfo.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.New(fname, ftype) dict$/;"	f
FileInfo.clearOldFolds	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.clearOldFolds() dict$/;"	f
FileInfo.closeKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.closeKindFold(kind) dict$/;"	f
FileInfo.openKindFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.openKindFold(kind) dict$/;"	f
FileInfo.reset	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.reset() dict$/;"	f
FileInfo.sortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:FileInfo.sortTags() dict$/;"	f
FileRead	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FileRead()$/;"	f
Filename	bundle/snipmate.vim/autoload/snipMate.vim	/^fun! Filename(...)$/;"	f
FindBoundingLinesOfSexyCom	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindBoundingLinesOfSexyCom(lineNum)$/;"	f
FindBufferForName	bundle/genutils/autoload/genutils.vim	/^function! s:FindBufferForName(fileName)$/;"	f
FindCreateWindow	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>FindCreateWindow(bufName, forceEdge, isExplorer, doDebug)$/;"	f
FindDelimiterIndex	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:FindDelimiterIndex(delimiter, line)$/;"	f
FindSelection	bundle/multiselect/autoload/multiselect.vim	/^function! s:FindSelection(linenr, dir)$/;"	f
FindWindow	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>FindWindow(bufName, doDebug)$/;"	f
Findcomplete	autoload/pathogen.vim	/^function! s:Findcomplete(A,L,P) " {{{1$/;"	f
Finish	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Finish() " {{{$/;"	f
FinishCommit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:FinishCommit()$/;"	f
FlushBuffer	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:FlushBuffer() " {{{$/;"	f
GF	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GF(mode) abort$/;"	f
GUDebugEcho	bundle/genutils/autoload/genutils.vim	/^command! -complete=file -nargs=* GUDebugEcho :echo <q-args>$/;"	c
GetNearbyTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetNearbyTag()$/;"	f
GetNextWinnrInStack	bundle/genutils/autoload/genutils.vim	/^function! s:GetNextWinnrInStack(dir)$/;"	f
GetSelectedBuffer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>GetSelectedBuffer()$/;"	f
GetSexyComLeft	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComLeft(space, esc)$/;"	f
GetSexyComMarker	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComMarker(space, esc)$/;"	f
GetSexyComRight	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:GetSexyComRight(space, esc)$/;"	f
GetSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:GetSnippet(word, scope)$/;"	f
GetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! GetSnippets(dir, filetypes)$/;"	f
GetTagInfo	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetTagInfo(linenr, ignorepseudo)$/;"	f
GetUserTypeDefs	bundle/tagbar/autoload/tagbar.vim	/^function! s:GetUserTypeDefs()$/;"	f
GetWinDim	bundle/genutils/autoload/genutils.vim	/^function! s:GetWinDim(dir, win)$/;"	f
Git	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Git(bang,cmd) abort$/;"	f
GitComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:GitComplete(A,L,P) abort$/;"	f
GotoNextToplevelTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:GotoNextToplevelTag(direction)$/;"	f
Grep	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Grep(bang,arg) abort$/;"	f
HIGH_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^HIGH_PRIORITY_CLASS = 0x00000080$/;"	v
HasCStyleComments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasCStyleComments()$/;"	f
HasEligibleBuffers	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>HasEligibleBuffers(delBufNum)$/;"	f
HasLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasLeadingTabs(...)$/;"	f
HasMultipartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:HasMultipartDelims()$/;"	f
Helptags	autoload/pathogen.vim	/^command! -bar Helptags :call pathogen#helptags()$/;"	c
HiLink	bundle/django.vim/syntax/django.vim	/^    command -nargs=+ HiLink hi def link <args>$/;"	c
HiLink	bundle/django.vim/syntax/django.vim	/^    command -nargs=+ HiLink hi link <args>$/;"	c
HighlightRange	bundle/multiselect/autoload/multiselect.vim	/^function! s:HighlightRange(ffline, lline) " {{{$/;"	f
HighlightTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:HighlightTag()$/;"	f
IDLE_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^IDLE_PRIORITY_CLASS = 0x00000040$/;"	v
INHERIT_PARENT_AFFINITY	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^INHERIT_PARENT_AFFINITY = 0x00010000$/;"	v
INPUT_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class INPUT_RECORD(Structure):$/;"	c
INPUT_UNION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class INPUT_UNION(Union):$/;"	c
Init	bundle/tagbar/autoload/tagbar.vim	/^function! s:Init()$/;"	f
Init	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:Init()$/;"	f
InitTypes	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitTypes()$/;"	f
InitVariable	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InitVariable(var, value)$/;"	f
InitWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:InitWindow(autoclose)$/;"	f
InsertRefs	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:InsertRefs(groupBR, prefix, group, suffix, matchline)$/;"	f
InvertComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:InvertComment(firstLine, lastLine)$/;"	f
InvokeFuncs	bundle/genutils/autoload/genutils.vim	/^function! s:InvokeFuncs(funcList)$/;"	f
IsCommented	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommented(left, right, line)$/;"	f
IsCommentedFromStartOfLine	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedFromStartOfLine(left, line)$/;"	f
IsCommentedNormOrSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedNormOrSexy(lineNum)$/;"	f
IsCommentedOuttermost	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsCommentedOuttermost(left, right, leftAlt, rightAlt, line)$/;"	f
IsDelimValid	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsDelimValid(delimiter, delIndx, line)$/;"	f
IsEscaped	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsEscaped(str, indx, escChar)$/;"	f
IsInSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsInSexyComment(line)$/;"	f
IsNERDTreeOpenInCurrentTab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreeOpenInCurrentTab()$/;"	f
IsNERDTreePresentInCurrentTab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:IsNERDTreePresentInCurrentTab()$/;"	f
IsNumEven	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsNumEven(num)$/;"	f
IsSelectionHidden	bundle/multiselect/autoload/multiselect.vim	/^function! s:IsSelectionHidden() " {{{$/;"	f
IsSexyComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:IsSexyComment(topline, bottomline)$/;"	f
IsValidFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:IsValidFile(fname, ftype)$/;"	f
JumpInit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:JumpInit() abort$/;"	f
JumpOut	bundle/autoclose/plugin/autoclose.vim	/^function <SID>JumpOut(char) " ----------{{{2$/;"	f
JumpToTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:JumpToTag(stay_in_tagbar)$/;"	f
KEY_EVENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^KEY_EVENT = 0x0001$/;"	v
KEY_EVENT_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class KEY_EVENT_RECORD(Structure):$/;"	c
KeyMap.All	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.All()$/;"	f
KeyMap.BindAll	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.BindAll()$/;"	f
KeyMap.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.Create(options)$/;"	f
KeyMap.bind	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:KeyMap.bind()$/;"	f
KindheaderTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.New(name) dict$/;"	f
KindheaderTag.closeFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.closeFold() dict$/;"	f
KindheaderTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.getPrototype() dict$/;"	f
KindheaderTag.isFoldable	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFoldable() dict$/;"	f
KindheaderTag.isFolded	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isFolded() dict$/;"	f
KindheaderTag.isKindheader	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.isKindheader() dict$/;"	f
KindheaderTag.openFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.openFold() dict$/;"	f
KindheaderTag.toggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:KindheaderTag.toggleFold() dict$/;"	f
Kwbd	bundle/bclose/plugin/bclose.vim	/^command! Kwbd call <SID>Kwbd(1)$/;"	c
Kwbd	bundle/bclose/plugin/bclose.vim	/^function s:Kwbd(kwbdStage)$/;"	f
LEFT_ALT_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^LEFT_ALT_PRESSED = 0x0002$/;"	v
LEFT_CTRL_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^LEFT_CTRL_PRESSED = 0x0008$/;"	v
LPBYTE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^LPBYTE = POINTER(c_ubyte)$/;"	v
LPTSTR	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^LPTSTR = POINTER(c_char)$/;"	v
LastIndexOfDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LastIndexOfDelim(delim, str)$/;"	f
Leave	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:Leave()$/;"	f
Left	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Left(...)$/;"	f
LeftMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:LeftMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
LoadPlugin	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:LoadPlugin()$/;"	f
Log	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Log(cmd,...)$/;"	f
LogDebugMessage	bundle/tagbar/autoload/tagbar.vim	/^function! s:LogDebugMessage(msg)$/;"	f
MBEClick	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! s:MBEClick()$/;"	f
MBEDeleteBuffer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>MBEDeleteBuffer()$/;"	f
MBEDoubleClick	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! s:MBEDoubleClick()$/;"	f
MBESelectBuffer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>MBESelectBuffer()$/;"	f
MBEbn	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! MBEbn call <SID>CycleBuffer(1)$/;"	c
MBEbp	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! MBEbp call <SID>CycleBuffer(0)$/;"	c
MEMORY_BASIC_INFORMATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class MEMORY_BASIC_INFORMATION(Structure):$/;"	c
MENU_EVENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^MENU_EVENT = 0x0008$/;"	v
MENU_EVENT_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class MENU_EVENT_RECORD(Structure):$/;"	c
MOUSE_EVENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^MOUSE_EVENT = 0x0002$/;"	v
MOUSE_EVENT_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class MOUSE_EVENT_RECORD(Structure):$/;"	c
MSAdd	bundle/multiselect/plugin/multiselect.vim	/^command! -range MSAdd :call multiselect#AddSelection(<line1>, <line2>)$/;"	c
MSClear	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% MSClear :call multiselect#ClearSelection(<line1>, <line2>)$/;"	c
MSDelete	bundle/multiselect/plugin/multiselect.vim	/^command! MSDelete :call multiselect#DeleteSelection()$/;"	c
MSExecCmd	bundle/multiselect/plugin/multiselect.vim	/^command! -nargs=1 -complete=command MSExecCmd$/;"	c
MSExecNormalCmd	bundle/multiselect/plugin/multiselect.vim	/^command! -nargs=1 -complete=command MSExecNormalCmd$/;"	c
MSFL	bundle/multiselect/autoload/multiselect.vim	/^function! MSFL(sel)$/;"	f
MSFindSelection	bundle/multiselect/autoload/multiselect.vim	/^function! MSFindSelection(linenr, dir)$/;"	f
MSGetSelections	bundle/multiselect/autoload/multiselect.vim	/^function! MSGetSelections()$/;"	f
MSHide	bundle/multiselect/plugin/multiselect.vim	/^command! MSHide :call multiselect#HideSelections()$/;"	c
MSInvert	bundle/multiselect/plugin/multiselect.vim	/^command! -range MSInvert :call multiselect#InvertSelections(<line1>, <line2>)$/;"	c
MSIsExecuting	bundle/multiselect/autoload/multiselect.vim	/^function! MSIsExecuting()$/;"	f
MSLL	bundle/multiselect/autoload/multiselect.vim	/^function! MSLL(sel)$/;"	f
MSMatchAdd	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSMatchAdd :call multiselect#AddSelectionsByMatch(<line1>,$/;"	c
MSMatchAddByDiffHlGroup	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSMatchAddByDiffHlGroup :call$/;"	c
MSMatchAddBySynGroup	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSMatchAddBySynGroup :call$/;"	c
MSNext	bundle/multiselect/plugin/multiselect.vim	/^command! MSNext :call multiselect#NextSelection(1)$/;"	c
MSNumberOfSelections	bundle/multiselect/autoload/multiselect.vim	/^function! MSNumberOfSelections()$/;"	f
MSPrev	bundle/multiselect/plugin/multiselect.vim	/^command! MSPrev :call multiselect#NextSelection(-1)$/;"	c
MSRefresh	bundle/multiselect/plugin/multiselect.vim	/^command! MSRefresh :call multiselect#RefreshSelections()$/;"	c
MSRestore	bundle/multiselect/plugin/multiselect.vim	/^command! MSRestore :call multiselect#RestoreSelections()$/;"	c
MSSelectionExists	bundle/multiselect/autoload/multiselect.vim	/^function! MSSelectionExists()$/;"	f
MSShow	bundle/multiselect/plugin/multiselect.vim	/^command! MSShow :call multiselect#ShowSelections()$/;"	c
MSVMatchAdd	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSVMatchAdd :call multiselect#AddSelectionsByMatch(<line1>,$/;"	c
MSVMatchAddByDiffHlGroup	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSVMatchAddByDiffHlGroup :call$/;"	c
MSVMatchAddBySynGroup	bundle/multiselect/plugin/multiselect.vim	/^command! -range=% -nargs=1 MSVMatchAddBySynGroup :call$/;"	c
MakeSnip	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! MakeSnip(scope, trigger, content, ...)$/;"	f
Map	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Map() "{{{$/;"	f
MapKeys	bundle/tagbar/autoload/tagbar.vim	/^function! s:MapKeys()$/;"	f
Match	bundle/genutils/autoload/genutils.vim	/^function! s:Match(expr, pat, start)$/;"	f
MatchDebug	bundle/vim-matchit/plugin/matchit.vim	/^  command! -nargs=0 MatchDebug call s:Match_debug()$/;"	c
MatchRanges	bundle/multiselect/autoload/multiselect.vim	/^function! s:MatchRanges() " {{{$/;"	f
Match_debug	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Match_debug()$/;"	f
Match_wrapper	bundle/vim-matchit/plugin/matchit.vim	/^function! s:Match_wrapper(word, forward, mode) range$/;"	f
Max	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>Max(argOne, argTwo)$/;"	f
Max	bundle/multiselect/autoload/multiselect.vim	/^function! s:Max(num1, num2)$/;"	f
MayBeRangeIsWholeFile	bundle/multiselect/autoload/multiselect.vim	/^function! s:MayBeRangeIsWholeFile(fline, lline)$/;"	f
MenuController.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.New(menuItems)$/;"	f
MenuController._allIndexesFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._allIndexesFor(shortcut)$/;"	f
MenuController._current	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._current()$/;"	f
MenuController._cursorDown	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorDown()$/;"	f
MenuController._cursorUp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._cursorUp()$/;"	f
MenuController._echoPrompt	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._echoPrompt()$/;"	f
MenuController._handleKeypress	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._handleKeypress(key)$/;"	f
MenuController._nextIndexFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._nextIndexFor(shortcut)$/;"	f
MenuController._restoreOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._restoreOptions()$/;"	f
MenuController._saveOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._saveOptions()$/;"	f
MenuController._setCmdheight	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController._setCmdheight()$/;"	f
MenuController.showMenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuController.showMenu()$/;"	f
MenuItem.All	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.All()$/;"	f
MenuItem.AllEnabled	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.AllEnabled()$/;"	f
MenuItem.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.Create(options)$/;"	f
MenuItem.CreateSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSeparator(options)$/;"	f
MenuItem.CreateSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.CreateSubmenu(options)$/;"	f
MenuItem.enabled	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.enabled()$/;"	f
MenuItem.execute	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.execute()$/;"	f
MenuItem.isSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSeparator()$/;"	f
MenuItem.isSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:MenuItem.isSubmenu()$/;"	f
Min	bundle/multiselect/autoload/multiselect.vim	/^function! s:Min(num1, num2)$/;"	f
MiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! MiniBufExplorer  call <SID>StartExplorer(1, -1)$/;"	c
MiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^augroup MiniBufExplorer$/;"	a
Move	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Move(force,destination)$/;"	f
MoveComplete	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:MoveComplete(A,L,P)$/;"	f
MultiMatch	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:MultiMatch(spflag, mode)$/;"	f
MultiSelect	bundle/multiselect/autoload/multiselect.vim	/^aug MultiSelect$/;"	a
Multipart	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Multipart()$/;"	f
MyCB	bundle/conque-read-only/tests/api.vim	/^function! MyCB(output)$/;"	f
MyCap	bundle/conque-read-only/tests/test_insert.vim	/^function! MyCap()$/;"	f
NERDComment	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function! NERDComment(mode, type) range$/;"	f
NERDCommenter	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^augroup NERDCommenter$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^augroup NERDTree$/;"	a
NERDTree	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTree :call s:initNerdTree('<args>')$/;"	c
NERDTreeAddKeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddKeyMap(options)$/;"	f
NERDTreeAddMenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuItem(options)$/;"	f
NERDTreeAddMenuSeparator	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddMenuSeparator(...)$/;"	f
NERDTreeAddNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeAddNode()$/;"	f
NERDTreeAddSubmenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeAddSubmenu(options)$/;"	f
NERDTreeClose	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeClose :call s:closeTreeIfOpen()$/;"	c
NERDTreeCloseAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeCloseAllTabs()$/;"	f
NERDTreeCopyNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeCopyNode()$/;"	f
NERDTreeDeleteNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeDeleteNode()$/;"	f
NERDTreeExecFile	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFile()$/;"	f
NERDTreeExecFileActive	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^function! NERDTreeExecFileActive()$/;"	f
NERDTreeExecuteFile	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeExecuteFile()$/;"	f
NERDTreeFind	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeFind call s:findAndRevealPath()$/;"	c
NERDTreeFromBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=1 -complete=customlist,s:completeBookmarks -bar NERDTreeFromBookmark call s:initNerdTree('<args>')$/;"	c
NERDTreeHijackNetrw	bundle/nerdtree/plugin/NERD_tree.vim	/^    augroup NERDTreeHijackNetrw$/;"	a
NERDTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=0 -bar NERDTreeMirror call s:initNerdTreeMirror()$/;"	c
NERDTreeMirrorIfGloballyActive	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorIfGloballyActive()$/;"	f
NERDTreeMirrorOrCreate	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreate()$/;"	f
NERDTreeMirrorOrCreateAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorOrCreateAllTabs()$/;"	f
NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeMirrorToggle call <SID>NERDTreeMirrorToggle()$/;"	c
NERDTreeMirrorToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeMirrorToggle()$/;"	f
NERDTreeMoveNode	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeMoveNode()$/;"	f
NERDTreeQuickLook	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeQuickLook()$/;"	f
NERDTreeRender	bundle/nerdtree/plugin/NERD_tree.vim	/^function! NERDTreeRender()$/;"	f
NERDTreeRevealInFinder	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! NERDTreeRevealInFinder()$/;"	f
NERDTreeTabsToggle	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^command! NERDTreeTabsToggle call <SID>NERDTreeToggleAllTabs()$/;"	c
NERDTreeToggle	bundle/nerdtree/plugin/NERD_tree.vim	/^command! -n=? -complete=dir -bar NERDTreeToggle :call s:toggle('<args>')$/;"	c
NERDTreeToggleAllTabs	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeToggleAllTabs()$/;"	f
NERDTreeUnfocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:NERDTreeUnfocus()$/;"	f
NORMAL_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^NORMAL_PRIORITY_CLASS = 0x00000020$/;"	v
NUMLOCK_ON	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^NUMLOCK_ON = 0x0020$/;"	v
NerdEcho	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NerdEcho(msg, typeOfMsg)$/;"	f
NoAutoClose	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:NoAutoClose() "{{{$/;"	f
NonComment	bundle/vim-matchit/plugin/python_match.vim	/^fun! s:NonComment(inc, ...)$/;"	f
NormalTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.New(name) dict$/;"	f
NormalTag.getPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.getPrototype() dict$/;"	f
NormalTag.isNormalTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.isNormalTag() dict$/;"	f
NormalTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:NormalTag.str() dict$/;"	f
NumLinesInBuf	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumLinesInBuf()$/;"	f
NumberOfLeadingTabs	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:NumberOfLeadingTabs(s)$/;"	f
OpenCloseBackspace	bundle/autoclose/plugin/autoclose.vim	/^function <SID>OpenCloseBackspace() " ---{{{2$/;"	f
OpenFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenFold()$/;"	f
OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenParents(...)$/;"	f
OpenSpecial	bundle/autoclose/plugin/autoclose.vim	/^function <SID>OpenSpecial(ochar,cchar) " ---{{{2$/;"	f
OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:OpenWindow(flags)$/;"	f
PLUGIN	bundle/delimitMate/Makefile	/^PLUGIN=$(shell basename "$$PWD")$/;"	m
PROCESS_CREATE_PROCESS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_PROCESS = 0x0080$/;"	v
PROCESS_CREATE_THREAD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_CREATE_THREAD = 0x0002$/;"	v
PROCESS_DUP_HANDLE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_DUP_HANDLE = 0x0040$/;"	v
PROCESS_INFORMATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class PROCESS_INFORMATION(Structure):$/;"	c
PROCESS_QUERY_INFORMATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_INFORMATION = 0x0400$/;"	v
PROCESS_QUERY_LIMITED_INFORMATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_QUERY_LIMITED_INFORMATION = 0x1000$/;"	v
PROCESS_SET_INFORMATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_INFORMATION = 0x0200$/;"	v
PROCESS_SET_QUOTA	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_SET_QUOTA = 0x0100$/;"	v
PROCESS_SUSPEND_RESUME	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_SUSPEND_RESUME = 0x0800$/;"	v
PROCESS_TERMINATE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_TERMINATE = 0x0001$/;"	v
PROCESS_VM_OPERATION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_OPERATION = 0x0008$/;"	v
PROCESS_VM_READ	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_READ = 0x0010$/;"	v
PROCESS_VM_WRITE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^PROCESS_VM_WRITE = 0x0020$/;"	v
ParseSkip	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseSkip(str)$/;"	f
ParseTagline	bundle/tagbar/autoload/tagbar.vim	/^function! s:ParseTagline(part1, part2, typeinfo, fileinfo)$/;"	f
ParseWords	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:ParseWords(groups)$/;"	f
Path.AbsolutePathFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.AbsolutePathFor(str)$/;"	f
Path.CopyingSupported	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.CopyingSupported()$/;"	f
Path.Create	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Create(fullpath)$/;"	f
Path.JoinPathStrings	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.JoinPathStrings(...)$/;"	f
Path.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.New(path)$/;"	f
Path.Slash	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.Slash()$/;"	f
Path.WinToUnixPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.WinToUnixPath(pathstr)$/;"	f
Path._str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._str()$/;"	f
Path._strForCd	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForCd()$/;"	f
Path._strForEdit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForEdit()$/;"	f
Path._strForGlob	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForGlob()$/;"	f
Path._strForUI	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path._strForUI()$/;"	f
Path.bookmarkNames	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.bookmarkNames()$/;"	f
Path.cacheDisplayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.cacheDisplayString()$/;"	f
Path.changeToDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.changeToDir()$/;"	f
Path.compareTo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.compareTo(path)$/;"	f
Path.copy	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copy(dest)$/;"	f
Path.copyingWillOverwrite	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.copyingWillOverwrite(dest)$/;"	f
Path.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.delete()$/;"	f
Path.displayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.displayString()$/;"	f
Path.equals	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.equals(path)$/;"	f
Path.exists	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.exists()$/;"	f
Path.extractDriveLetter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.extractDriveLetter(fullpath)$/;"	f
Path.getDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getDir()$/;"	f
Path.getLastPathComponent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getLastPathComponent(dirSlash)$/;"	f
Path.getParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getParent()$/;"	f
Path.getSortOrderIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.getSortOrderIndex()$/;"	f
Path.ignore	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.ignore()$/;"	f
Path.isUnder	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.isUnder(path)$/;"	f
Path.readInfoFromDisk	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.readInfoFromDisk(fullpath)$/;"	f
Path.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.refresh()$/;"	f
Path.rename	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.rename(newPath)$/;"	f
Path.str	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.str(...)$/;"	f
Path.strTrunk	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:Path.strTrunk()$/;"	f
PersistentVarName	bundle/genutils/autoload/genutils.vim	/^function! s:PersistentVarName(pluginName, persistentVar)$/;"	f
PlaceDelimitersAndInsBetween	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:PlaceDelimitersAndInsBetween()$/;"	f
PrintHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintHelp()$/;"	f
PrintKinds	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintKinds(typeinfo, fileinfo)$/;"	f
PrintTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PrintTag(tag, depth, fileinfo, typeinfo)$/;"	f
ProcessFile	bundle/snipmate.vim/plugin/snipMate.vim	/^fun s:ProcessFile(file, ft, ...)$/;"	f
ProcessFile	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessFile(fname, ftype)$/;"	f
ProcessPseudoChildren	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoChildren(tags, tag, depth, typeinfo, fileinfo)$/;"	f
ProcessPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:ProcessPseudoTag(curtags, tag, parent, typeinfo, fileinfo)$/;"	f
ProcessSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:ProcessSnippet(snip)$/;"	f
PseudoTag.New	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.New(name) dict$/;"	f
PseudoTag.isPseudoTag	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.isPseudoTag() dict$/;"	f
PseudoTag.str	bundle/tagbar/autoload/tagbar.vim	/^function! s:PseudoTag.str() dict$/;"	f
PyMatch	bundle/vim-matchit/plugin/python_match.vim	/^fun! s:PyMatch(type, mode) range$/;"	f
QSortR	bundle/genutils/autoload/genutils.vim	/^function! s:QSortR(start, end, cmp, direction, accessor, swapper, context)$/;"	f
QuitIfOnlyWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:QuitIfOnlyWindow()$/;"	f
QuoteDelim	bundle/autoclose/plugin/autoclose.vim	/^function <SID>QuoteDelim(char) " ---{{{2$/;"	f
REALTIME_PRIORITY_CLASS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^REALTIME_PRIORITY_CLASS = 0x00000100$/;"	v
RIGHT_ALT_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^RIGHT_ALT_PRESSED = 0x0001$/;"	v
RIGHT_CTRL_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^RIGHT_CTRL_PRESSED = 0x0004$/;"	v
RagtagInit	bundle/vim-ragtag/plugin/ragtag.vim	/^function! RagtagInit()$/;"	f
Ref	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Ref(string, d, ...)$/;"	f
ReloadAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadAllSnippets()$/;"	f
ReloadSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ReloadSnippets(ft)$/;"	f
Remove	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Remove(force)$/;"	f
RemoveDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RemoveDelimiters(left, right, line)$/;"	f
RemoveSnippet	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:RemoveSnippet()$/;"	f
RenderContent	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderContent(...)$/;"	f
RenderKeepView	bundle/tagbar/autoload/tagbar.vim	/^function! s:RenderKeepView(...)$/;"	f
RepeatLast	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! RepeatLast(name, output, ...) " {{{$/;"	f
ReplaceCmd	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:ReplaceCmd(cmd,...) abort$/;"	f
ReplaceDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceDelims(toReplace1, toReplace2, replacor1, replacor2, str)$/;"	f
ReplaceLeftMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceLeftMostDelim(toReplace, replacor, str)$/;"	f
ReplaceRightMostDelim	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:ReplaceRightMostDelim(toReplace, replacor, str)$/;"	f
ResetAllSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetAllSnippets()$/;"	f
ResetSnippets	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ResetSnippets(ft)$/;"	f
ResizeWindow	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>ResizeWindow()$/;"	f
Resolve	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Resolve(source, target, output)$/;"	f
RestoreFocus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreFocus()$/;"	f
RestoreNERDTreeViewIfPossible	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:RestoreNERDTreeViewIfPossible()$/;"	f
RestoreScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RestoreScreenState()$/;"	f
RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! s:RestoreSession()$/;"	f
RestoreWindowSettings2	bundle/genutils/autoload/genutils.vim	/^function! s:RestoreWindowSettings2(id)$/;"	f
Right	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:Right(...)$/;"	f
RightMostIndx	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:RightMostIndx(countCommentedLines, countEmptyLines, topline, bottomline)$/;"	f
SCRIPT	bundle/delimitMate/Makefile	/^SCRIPT=$(wildcard plugin\/*.vim)$/;"	m
SCROLLLOCK_ON	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SCROLLLOCK_ON = 0x0040$/;"	v
SECURITY_ATTRIBUTES	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class SECURITY_ATTRIBUTES(Structure):$/;"	c
SHIFT_PRESSED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SHIFT_PRESSED = 0x0010$/;"	v
SID	bundle/autoclose/plugin/autoclose.vim	/^function s:SID()$/;"	f
SMALL_RECT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class SMALL_RECT(Structure):$/;"	c
SNR	bundle/genutils/autoload/genutils.vim	/^function! s:SNR()$/;"	f
STARTF_FORCEOFFFEEDBACK	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEOFFFEEDBACK = 0x00000080$/;"	v
STARTF_FORCEONFEEDBACK	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_FORCEONFEEDBACK = 0x00000040$/;"	v
STARTF_PREVENTPINNING	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_PREVENTPINNING = 0x00002000$/;"	v
STARTF_RUNFULLSCREEN	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_RUNFULLSCREEN = 0x00000020$/;"	v
STARTF_TITLEISAPPID	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISAPPID = 0x00001000$/;"	v
STARTF_TITLEISLINKNAME	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_TITLEISLINKNAME = 0x00000800$/;"	v
STARTF_USECOUNTCHARS	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USECOUNTCHARS = 0x00000008$/;"	v
STARTF_USEFILLATTRIBUTE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USEFILLATTRIBUTE = 0x00000010$/;"	v
STARTF_USEHOTKEY	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USEHOTKEY = 0x00000200$/;"	v
STARTF_USEPOSITION	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USEPOSITION = 0x00000004$/;"	v
STARTF_USESHOWWINDOW	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USESHOWWINDOW = 0x00000001$/;"	v
STARTF_USESIZE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USESIZE = 0x00000002$/;"	v
STARTF_USESTDHANDLES	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STARTF_USESTDHANDLES = 0x00000100$/;"	v
STARTUPINFO	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class STARTUPINFO(Structure):$/;"	c
STD_ERROR_HANDLE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STD_ERROR_HANDLE = c_ulong(-12)$/;"	v
STD_INPUT_HANDLE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STD_INPUT_HANDLE = c_ulong(-10)$/;"	v
STD_OUTPUT_HANDLE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^STD_OUTPUT_HANDLE = c_ulong(-11)$/;"	v
SW_FORCEMINIMIZE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_FORCEMINIMIZE = 11$/;"	v
SW_HIDE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_HIDE = 0$/;"	v
SW_MAXIMIZE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_MAXIMIZE = 3$/;"	v
SW_MINIMIZE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_MINIMIZE = 6$/;"	v
SW_RESTORE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_RESTORE = 9$/;"	v
SW_SHOW	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOW = 5$/;"	v
SW_SHOWDEFAULT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWDEFAULT = 10$/;"	v
SW_SHOWMAXIMIZED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMAXIMIZED = 3$/;"	v
SW_SHOWMINIMIZED	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINIMIZED = 2$/;"	v
SW_SHOWMINNOACTIVE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWMINNOACTIVE = 7$/;"	v
SW_SHOWNA	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNA = 8$/;"	v
SW_SHOWNOACTIVATE	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNOACTIVATE = 4$/;"	v
SW_SHOWNORMAL	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^SW_SHOWNORMAL = 1$/;"	v
SaveNERDTreeViewIfPossible	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:SaveNERDTreeViewIfPossible()$/;"	f
SaveScreenState	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SaveScreenState()$/;"	f
SelectWord	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:SelectWord()$/;"	f
SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevel(level)$/;"	f
SetFoldLevelRecursive	bundle/tagbar/autoload/tagbar.vim	/^function! s:SetFoldLevelRecursive(fileinfo, tags, level)$/;"	f
SetSelRanges	bundle/multiselect/autoload/multiselect.vim	/^function! s:SetSelRanges(newSel)$/;"	f
SetUpForNewFiletype	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SetUpForNewFiletype(filetype, forceReset)$/;"	f
ShouldFocusBeOnNERDTreeAfterStartup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:ShouldFocusBeOnNERDTreeAfterStartup()$/;"	f
ShowAvailableSnips	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! ShowAvailableSnips()$/;"	f
ShowBuffers	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>ShowBuffers(delBufNum)$/;"	f
ShowPrototype	bundle/tagbar/autoload/tagbar.vim	/^function! s:ShowPrototype()$/;"	f
SortSelections	bundle/multiselect/autoload/multiselect.vim	/^function! s:SortSelections()$/;"	f
SortTags	bundle/tagbar/autoload/tagbar.vim	/^function! s:SortTags(tags, comparemethod)$/;"	f
StageDiff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiff(diff) abort$/;"	f
StageDiffEdit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageDiffEdit() abort$/;"	f
StagePatch	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StagePatch(lnum1,lnum2) abort$/;"	f
StageReloadSeek	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageReloadSeek(target,lnum1,lnum2)$/;"	f
StageToggle	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:StageToggle(lnum1,lnum2) abort$/;"	f
StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StartDebug(filename)$/;"	f
StartExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>StartExplorer(sticky, delBufNum)$/;"	f
StartOfBlock	bundle/vim-matchit/plugin/python_match.vim	/^fun! s:StartOfBlock(start)$/;"	f
Status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Status() abort$/;"	f
StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! s:StopDebug()$/;"	f
StopExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>StopExplorer(sticky)$/;"	f
SwapOutterMultiPartDelimsForPlaceHolders	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterMultiPartDelimsForPlaceHolders(line)$/;"	f
SwapOutterPlaceHoldersForMultiPartDelims	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwapOutterPlaceHoldersForMultiPartDelims(line)$/;"	f
SwitchToAlternativeDelimiters	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:SwitchToAlternativeDelimiters(printMsgs)$/;"	f
TERMINATOR	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    TERMINATOR = None$/;"	v	class:ConqueSoleSharedMemory
TESTS	bundle/delimitMate/Makefile	/^TESTS=$(wildcard autoload\/*Tests.vim)$/;"	m
TMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! TMiniBufExplorer  call <SID>ToggleExplorer()$/;"	c
TabEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabEnterHandler()$/;"	f
TabLeaveHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:TabLeaveHandler()$/;"	f
TabSpace	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabSpace()$/;"	f
TabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:TabbedCol(line, col)$/;"	f
TagList_IsValid	bundle/taglist/plugin/taglist.vim	/^function! TagList_IsValid()$/;"	f
TagList_Start	bundle/taglist/plugin/taglist.vim	/^function! TagList_Start()$/;"	f
TagList_WrapUp	bundle/taglist/plugin/taglist.vim	/^function! TagList_WrapUp()$/;"	f
TagList_title	bundle/taglist/plugin/taglist.vim	/^    let TagList_title = "__Tag_List__"$/;"	v
TagbarBalloonExpr	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarBalloonExpr()$/;"	f
TagbarClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarClose         call tagbar#CloseWindow()$/;"	c
TagbarDebug	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarDebug         call tagbar#StartDebug(<f-args>)$/;"	c
TagbarDebugEnd	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarDebugEnd      call tagbar#StopDebug()$/;"	c
TagbarGenerateStatusline	bundle/tagbar/autoload/tagbar.vim	/^function! TagbarGenerateStatusline()$/;"	f
TagbarOpen	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=? TagbarOpen          call tagbar#OpenWindow(<f-args>)$/;"	c
TagbarOpenAutoClose	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarOpenAutoClose call tagbar#OpenWindow('fc')$/;"	c
TagbarSession	bundle/tagbar/plugin/tagbar.vim	/^augroup TagbarSession$/;"	a
TagbarSetFoldlevel	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=1 TagbarSetFoldlevel  call tagbar#SetFoldLevel(<args>)$/;"	c
TagbarShowTag	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarShowTag       call tagbar#OpenParents()$/;"	c
TagbarToggle	bundle/tagbar/plugin/tagbar.vim	/^command! -nargs=0 TagbarToggle        call tagbar#ToggleWindow()$/;"	c
TestMappingsDo	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:TestMappingsDo() "{{{$/;"	f
Tlist	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar Tlist TlistToggle$/;"	c
TlistAddFiles	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=file TlistAddFiles$/;"	c
TlistAddFilesRecursive	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=+ -complete=dir TlistAddFilesRecursive$/;"	c
TlistClose	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistClose call s:Tlist_Window_Close()$/;"	c
TlistDebug	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=? -complete=file -bar TlistDebug$/;"	c
TlistHighlightTag	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistHighlightTag call s:Tlist_Window_Highlight_Tag($/;"	c
TlistLock	bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistLock let Tlist_Auto_Update=0$/;"	c
TlistMessages	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistMessages call s:Tlist_Debug_Show()$/;"	c
TlistOpen	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistOpen call s:Tlist_Window_Open()$/;"	c
TlistSessionLoad	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionLoad$/;"	c
TlistSessionSave	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=file TlistSessionSave$/;"	c
TlistShowPrototype	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowPrototype$/;"	c
TlistShowTag	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=* -complete=buffer TlistShowTag$/;"	c
TlistSync	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistSync TlistHighlightTag$/;"	c
TlistToggle	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistToggle call s:Tlist_Window_Toggle()$/;"	c
TlistUndebug	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUndebug  call s:Tlist_Debug_Disable()$/;"	c
TlistUnlock	bundle/taglist/plugin/taglist.vim	/^    command! -bar TlistUnlock let Tlist_Auto_Update=1$/;"	c
TlistUpdate	bundle/taglist/plugin/taglist.vim	/^    command! -nargs=0 -bar TlistUpdate call s:Tlist_Update_Current_File()$/;"	c
Tlist_Add_Files	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files(...)$/;"	f
Tlist_Add_Files_Recursive	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Add_Files_Recursive(dir, ...)$/;"	f
Tlist_Auto_Highlight_Tag	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Highlight_Tag = 1$/;"	v
Tlist_Auto_Open	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Open = 0$/;"	v
Tlist_Auto_Update	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Auto_Update = 1$/;"	v
Tlist_Ballon_Expr	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Ballon_Expr()$/;"	f
Tlist_Buffer_Removed	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Buffer_Removed(filename)$/;"	f
Tlist_Change_Sort	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Change_Sort(caller, action, sort_type)$/;"	f
Tlist_Close_On_Select	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Close_On_Select = 0$/;"	v
Tlist_Compact_Format	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Compact_Format = 0$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'ctags.exe'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'exuberant-ctags'$/;"	v
Tlist_Ctags_Cmd	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Ctags_Cmd = 'tags'$/;"	v
Tlist_Debug_Disable	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Disable(...)$/;"	f
Tlist_Debug_Enable	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Enable(...)$/;"	f
Tlist_Debug_Show	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Debug_Show()$/;"	f
Tlist_Detect_Filetype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Detect_Filetype(fname)$/;"	f
Tlist_Discard_FileInfo	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_FileInfo(fidx)$/;"	f
Tlist_Discard_TagInfo	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Discard_TagInfo(fidx)$/;"	f
Tlist_Display_Prototype	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Prototype = 0$/;"	v
Tlist_Display_Tag_Scope	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Display_Tag_Scope = 1$/;"	v
Tlist_Enable_Fold_Column	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Enable_Fold_Column = 1$/;"	v
Tlist_Exe_Cmd_No_Acmds	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Exe_Cmd_No_Acmds(cmd)$/;"	f
Tlist_Exit_OnlyWindow	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Exit_OnlyWindow = 0$/;"	v
Tlist_Extract_Tag_Scope	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tag_Scope(tag_line)$/;"	f
Tlist_Extract_Tagtype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Extract_Tagtype(tag_line)$/;"	f
Tlist_FileType_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_FileType_Init(ftype)$/;"	f
Tlist_File_Fold_Auto_Close	bundle/taglist/plugin/taglist.vim	/^        let Tlist_File_Fold_Auto_Close = 0$/;"	v
Tlist_Find_Nearest_Tag_Idx	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Find_Nearest_Tag_Idx(fidx, linenum)$/;"	f
Tlist_GainFocus_On_ToggleOpen	bundle/taglist/plugin/taglist.vim	/^        let Tlist_GainFocus_On_ToggleOpen = 0$/;"	v
Tlist_Get_Buffer_Filetype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Buffer_Filetype(bnum)$/;"	f
Tlist_Get_File_Index	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_File_Index(fname)$/;"	f
Tlist_Get_Tag_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Linenum(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Prototype(fidx, tidx)$/;"	f
Tlist_Get_Tag_Prototype_By_Line	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tag_Prototype_By_Line(...)$/;"	f
Tlist_Get_Tag_SearchPat	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_SearchPat(fidx, tidx)$/;"	f
Tlist_Get_Tag_Type_By_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Get_Tag_Type_By_Tag(fidx, tidx)$/;"	f
Tlist_Get_Tagname_By_Line	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Get_Tagname_By_Line(...)$/;"	f
Tlist_Highlight_Tag_On_BufEnter	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Highlight_Tag_On_BufEnter = 1$/;"	v
Tlist_Inc_Winwidth	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 0$/;"	v
Tlist_Inc_Winwidth	bundle/taglist/plugin/taglist.vim	/^            let Tlist_Inc_Winwidth = 1$/;"	v
Tlist_Init_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Init_File(filename, ftype)$/;"	f
Tlist_Log_Msg	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Log_Msg(msg)$/;"	f
Tlist_Max_Submenu_Items	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Submenu_Items = 20$/;"	v
Tlist_Max_Tag_Length	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Max_Tag_Length = 10$/;"	v
Tlist_Menu_Add_Base_Menu	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Add_Base_Menu()$/;"	f
Tlist_Menu_File_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_File_Refresh(fidx)$/;"	f
Tlist_Menu_Get_Tag_Type_Cmd	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Get_Tag_Type_Cmd(fidx, ftype, add_ttype_name, ttype_idx)$/;"	f
Tlist_Menu_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Init()$/;"	f
Tlist_Menu_Jump_To_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Jump_To_Tag(tidx)$/;"	f
Tlist_Menu_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Refresh()$/;"	f
Tlist_Menu_Remove_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Remove_File()$/;"	f
Tlist_Menu_Update_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Menu_Update_File(clear_menu)$/;"	f
Tlist_Parse_Tagline	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Parse_Tagline(tag_line)$/;"	f
Tlist_Post_Close_Cleanup	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Post_Close_Cleanup()$/;"	f
Tlist_Process_Dir	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Dir(dir_name, pat)$/;"	f
Tlist_Process_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_File(filename, ftype)$/;"	f
Tlist_Process_File_Always	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Process_File_Always = 0$/;"	v
Tlist_Process_Filelist	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Process_Filelist(file_names)$/;"	f
Tlist_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh()$/;"	f
Tlist_Refresh_Folds	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Refresh_Folds()$/;"	f
Tlist_Remove_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Remove_File(file_idx, user_request)$/;"	f
Tlist_Session_Load	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Load(...)$/;"	f
Tlist_Session_Save	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Session_Save(...)$/;"	f
Tlist_Set_App	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Set_App(name)$/;"	f
Tlist_Show_Menu	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_Menu = 0$/;"	v
Tlist_Show_One_File	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Show_One_File = 0$/;"	v
Tlist_Skip_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Skip_File(filename, ftype)$/;"	f
Tlist_Sort_Type	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Sort_Type = 'order'$/;"	v
Tlist_Update_Current_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Current_File()$/;"	f
Tlist_Update_File	bundle/taglist/plugin/taglist.vim	/^function! Tlist_Update_File(filename, ftype)$/;"	f
Tlist_Update_Remove_List	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Update_Remove_List(filename, add)$/;"	f
Tlist_Use_Horiz_Window	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Horiz_Window = 0$/;"	v
Tlist_Use_Right_Window	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_Right_Window = 0$/;"	v
Tlist_Use_SingleClick	bundle/taglist/plugin/taglist.vim	/^        let Tlist_Use_SingleClick = 0$/;"	v
Tlist_User_Removed_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_User_Removed_File(filename)$/;"	f
Tlist_Vim_Session_Load	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Vim_Session_Load()$/;"	f
Tlist_Warning_Msg	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Warning_Msg(msg)$/;"	f
Tlist_WinHeight	bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinHeight = 10$/;"	v
Tlist_WinWidth	bundle/taglist/plugin/taglist.vim	/^        let Tlist_WinWidth = 30$/;"	v
Tlist_Window_Check_Auto_Open	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Auto_Open()$/;"	f
Tlist_Window_Check_Width	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Check_Width()$/;"	f
Tlist_Window_Close	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Close()$/;"	f
Tlist_Window_Create	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Create()$/;"	f
Tlist_Window_Display_Help	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Display_Help()$/;"	f
Tlist_Window_Exit_Only_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Exit_Only_Window()$/;"	f
Tlist_Window_Get_File_Index_By_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_File_Index_By_Linenum(lnum)$/;"	f
Tlist_Window_Get_Tag_Index	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Index(fidx, lnum)$/;"	f
Tlist_Window_Get_Tag_Type_By_Linenum	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Get_Tag_Type_By_Linenum(fidx, lnum)$/;"	f
Tlist_Window_Goto_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Goto_Window()$/;"	f
Tlist_Window_Highlight_Line	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Line()$/;"	f
Tlist_Window_Highlight_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Highlight_Tag(filename, cur_lnum, cntx, center)$/;"	f
Tlist_Window_Init	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Init()$/;"	f
Tlist_Window_Jump_To_Tag	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Jump_To_Tag(win_ctrl)$/;"	f
Tlist_Window_Mark_File_Window	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Mark_File_Window()$/;"	f
Tlist_Window_Move_To_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Move_To_File(dir)$/;"	f
Tlist_Window_Open	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open()$/;"	f
Tlist_Window_Open_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File(win_ctrl, filename, tagpat)$/;"	f
Tlist_Window_Open_File_Fold	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Open_File_Fold(acmd_bufnr)$/;"	f
Tlist_Window_Refresh	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh()$/;"	f
Tlist_Window_Refresh_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Refresh_File(filename, ftype)$/;"	f
Tlist_Window_Remove_File_From_Display	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Remove_File_From_Display(fidx)$/;"	f
Tlist_Window_Show_Info	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Show_Info()$/;"	f
Tlist_Window_Toggle	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle()$/;"	f
Tlist_Window_Toggle_Help_Text	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Toggle_Help_Text()$/;"	f
Tlist_Window_Update_File	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_File()$/;"	f
Tlist_Window_Update_Line_Offsets	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Update_Line_Offsets(start_idx, increment, offset)$/;"	f
Tlist_Window_Zoom	bundle/taglist/plugin/taglist.vim	/^function! s:Tlist_Window_Zoom()$/;"	f
ToggleAutoCloseMappings	bundle/autoclose/plugin/autoclose.vim	/^fun <SID>ToggleAutoCloseMappings() " --- {{{2$/;"	f
ToggleExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^function! <SID>ToggleExplorer()$/;"	f
ToggleFold	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleFold()$/;"	f
ToggleHelp	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleHelp()$/;"	f
ToggleMouse	bundle/vim-togglemouse/plugin/toggle_mouse.vim	/^fun! s:ToggleMouse()$/;"	f
ToggleSort	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleSort()$/;"	f
ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ToggleWindow()$/;"	f
TreeDirNode.AbsoluteTreeRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.AbsoluteTreeRoot()$/;"	f
TreeDirNode.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.GetSelected()$/;"	f
TreeDirNode.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.New(path)$/;"	f
TreeDirNode._initChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._initChildren(silent)$/;"	f
TreeDirNode._openRecursively2	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode._openRecursively2(forceOpen)$/;"	f
TreeDirNode.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.activate(forceKeepWinOpen)$/;"	f
TreeDirNode.addChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.addChild(treenode, inOrder)$/;"	f
TreeDirNode.close	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.close()$/;"	f
TreeDirNode.closeChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.closeChildren()$/;"	f
TreeDirNode.createChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.createChild(path, inOrder)$/;"	f
TreeDirNode.findNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.findNode(path)$/;"	f
TreeDirNode.getChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChild(path)$/;"	f
TreeDirNode.getChildByIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildByIndex(indx, visible)$/;"	f
TreeDirNode.getChildCount	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildCount()$/;"	f
TreeDirNode.getChildIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getChildIndex(path)$/;"	f
TreeDirNode.getVisibleChildCount	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildCount()$/;"	f
TreeDirNode.getVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.getVisibleChildren()$/;"	f
TreeDirNode.hasVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.hasVisibleChildren()$/;"	f
TreeDirNode.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.open()$/;"	f
TreeDirNode.openExplorer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openExplorer()$/;"	f
TreeDirNode.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openInNewTab(options)$/;"	f
TreeDirNode.openRecursively	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.openRecursively()$/;"	f
TreeDirNode.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.refresh()$/;"	f
TreeDirNode.removeChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.removeChild(treenode)$/;"	f
TreeDirNode.reveal	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.reveal(path)$/;"	f
TreeDirNode.sortChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.sortChildren()$/;"	f
TreeDirNode.toggleOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.toggleOpen()$/;"	f
TreeDirNode.transplantChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeDirNode.transplantChild(newNode)$/;"	f
TreeFileNode.GetRootForTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootForTab()$/;"	f
TreeFileNode.GetRootLineNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetRootLineNum()$/;"	f
TreeFileNode.GetSelected	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.GetSelected()$/;"	f
TreeFileNode.New	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.New(path)$/;"	f
TreeFileNode._renderToString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode._renderToString(depth, drawText, vertMap, isLastChild)$/;"	f
TreeFileNode.activate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.activate(forceKeepWinOpen)$/;"	f
TreeFileNode.bookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.bookmark(name)$/;"	f
TreeFileNode.cacheParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.cacheParent()$/;"	f
TreeFileNode.clearBoomarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.clearBoomarks()$/;"	f
TreeFileNode.copy	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.copy(dest)$/;"	f
TreeFileNode.delete	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.delete()$/;"	f
TreeFileNode.displayString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.displayString()$/;"	f
TreeFileNode.equals	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.equals(treenode)$/;"	f
TreeFileNode.findNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findNode(path)$/;"	f
TreeFileNode.findOpenDirSiblingWithVisibleChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findOpenDirSiblingWithVisibleChildren(direction)$/;"	f
TreeFileNode.findSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.findSibling(direction)$/;"	f
TreeFileNode.getLineNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.getLineNum()$/;"	f
TreeFileNode.isRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isRoot()$/;"	f
TreeFileNode.isVisible	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.isVisible()$/;"	f
TreeFileNode.makeRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.makeRoot()$/;"	f
TreeFileNode.open	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.open()$/;"	f
TreeFileNode.openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openInNewTab(options)$/;"	f
TreeFileNode.openSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openSplit()$/;"	f
TreeFileNode.openVSplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.openVSplit()$/;"	f
TreeFileNode.putCursorHere	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.putCursorHere(isJump, recurseUpward)$/;"	f
TreeFileNode.refresh	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.refresh()$/;"	f
TreeFileNode.rename	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.rename(newName)$/;"	f
TreeFileNode.renderToString	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:TreeFileNode.renderToString()$/;"	f
TriggerSnippet	bundle/snipmate.vim/plugin/snipMate.vim	/^fun! TriggerSnippet()$/;"	f
Type	bundle/delimitMate/autoload/delimitMateTests.vim	/^	function! Type(name, input, output, options, ...) " {{{$/;"	f
U	bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> U     :<C-U>call <SID>wrap('U',v:count)<CR>$/;"	m
UMiniBufExplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^  command! UMiniBufExplorer  call <SID>AutoUpdate(-1)$/;"	c
UnEsc	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UnEsc(str, escChar)$/;"	f
UncommentLineNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLineNormal(line)$/;"	f
UncommentLines	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLines(topLine, bottomLine)$/;"	f
UncommentLinesNormal	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesNormal(topline, bottomline)$/;"	f
UncommentLinesSexy	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UncommentLinesSexy(topline, bottomline)$/;"	f
Unmap	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:Unmap() " {{{$/;"	f
UntabbedCol	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^function s:UntabbedCol(line, col)$/;"	f
UpdateChangedSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateChangedSnip(entering)$/;"	f
UpdatePlaceholderTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdatePlaceholderTabStops()$/;"	f
UpdateTabStops	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateTabStops()$/;"	f
UpdateVars	bundle/snipmate.vim/autoload/snipMate.vim	/^fun s:UpdateVars()$/;"	f
VERSION	bundle/delimitMate/Makefile	/^VERSION=$(shell perl -ne 'if (\/\\*\\sCurrent\\srelease:\/) {s\/^\\s+(\\d+\\.\\S+)\\s.*$$\/\\1\/;print}' $(DOC))$/;"	m
VIM	bundle/delimitMate/Makefile	/^VIM=\/usr\/bin\/vim$/;"	m
VIMFOLDER	bundle/delimitMate/Makefile	/^VIMFOLDER=~\/.vim\/$/;"	m
Ve	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Ve       :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vedit    :execute s:find(<count>,'edit<bang>',<q-args>,0)$/;"	c
Vopen	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vopen    :execute s:find(<count>,'edit<bang>',<q-args>,1)$/;"	c
Vpedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vpedit   :execute s:find(<count>,'pedit',<q-args>,<bang>1)$/;"	c
Vread	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vread    :execute s:find(<count>,'read',<q-args>,<bang>1)$/;"	c
Vsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vsplit   :execute s:find(<count>,'split',<q-args>,<bang>1)$/;"	c
Vtabedit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vtabedit :execute s:find(<count>,'tabedit',<q-args>,<bang>1)$/;"	c
Vvsplit	autoload/pathogen.vim	/^command! -bar -bang -range=1 -nargs=1 -complete=customlist,s:Findcomplete Vvsplit  :execute s:find(<count>,'vsplit',<q-args>,<bang>1)$/;"	c
WINDOW_BUFFER_SIZE_EVENT	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^WINDOW_BUFFER_SIZE_EVENT = 0x0004$/;"	v
WINDOW_BUFFER_SIZE_RECORD	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^class WINDOW_BUFFER_SIZE_RECORD(Structure):$/;"	c
Warn	bundle/bclose/plugin/bclose-old.vim	/^function! s:Warn(msg)$/;"	f
Wholematch	bundle/vim-matchit/plugin/matchit.vim	/^fun! s:Wholematch(string, pat, start)$/;"	f
WinEnterHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinEnterHandler()$/;"	f
WinLeaveHandler	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^fun! s:WinLeaveHandler()$/;"	f
Workspace_IsValid	bundle/workspace/plugin/workspace.vim	/^function! Workspace_IsValid()$/;"	f
Workspace_Set_App	bundle/workspace/plugin/workspace.vim	/^function! Workspace_Set_App(name)$/;"	f
Workspace_Start	bundle/workspace/plugin/workspace.vim	/^function! Workspace_Start()$/;"	f
Workspace_WrapUp	bundle/workspace/plugin/workspace.vim	/^function! Workspace_WrapUp()$/;"	f
Workspace_title	bundle/workspace/plugin/workspace.vim	/^let Workspace_title = "__Workspace__"$/;"	v
Wq	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Wq(force,...) abort$/;"	f
Write	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:Write(force,...) abort$/;"	f
WsClose	bundle/workspace/plugin/workspace.vim	/^command! WsClose call s:Ws_Close_Window()$/;"	c
WsOpen	bundle/workspace/plugin/workspace.vim	/^command! -nargs=? -complete=file WsOpen call s:Ws_Open(0, <q-args>)$/;"	c
WsSave	bundle/workspace/plugin/workspace.vim	/^command! WsSave call s:Ws_Save()$/;"	c
WsSessionOpen	bundle/workspace/plugin/workspace.vim	/^command! -nargs=1 -complete=file WsSessionOpen call s:Ws_Session_Open(<q-args>)$/;"	c
WsSessionSave	bundle/workspace/plugin/workspace.vim	/^command! WsSessionSave call s:Ws_Session_Save()$/;"	c
WsToggle	bundle/workspace/plugin/workspace.vim	/^command! WsToggle call s:Ws_Toggle_Window()$/;"	c
Ws_Add_File	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Add_File(parent_prefix, insert_idx, one_file)$/;"	f
Ws_Add_Files	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Add_Files(args, append)$/;"	f
Ws_Add_Group	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Add_Group(parent_prefix, insert_idx, gname)$/;"	f
Ws_Add_Groups	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Add_Groups(args, append)$/;"	f
Ws_Adjust_Vim_WinWidth	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Adjust_Vim_WinWidth()$/;"	f
Ws_Auto_Open	bundle/workspace/plugin/workspace.vim	/^    let Ws_Auto_Open = 0$/;"	v
Ws_Check_Window_Width	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Check_Window_Width()$/;"	f
Ws_Close_On_File_Select	bundle/workspace/plugin/workspace.vim	/^    let Ws_Close_On_File_Select = 0$/;"	v
Ws_Close_Window	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Close_Window()$/;"	f
Ws_Copy_Delete_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Copy_Delete_Entry(line1, line2, copy)$/;"	f
Ws_Copy_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Copy_Entry(src_prefix, src_idx, dst_prefix, dst_idx)$/;"	f
Ws_Discard_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Discard_Entry(prefix, index)$/;"	f
Ws_Discard_Workspace	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Discard_Workspace()$/;"	f
Ws_Display_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Display_Entry(prefix, index, indent)$/;"	f
Ws_Display_Help	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Display_Help()$/;"	f
Ws_Enable_Fold_Column	bundle/workspace/plugin/workspace.vim	/^    let Ws_Enable_Fold_Column = 1$/;"	v
Ws_Exit_Only_Window	bundle/workspace/plugin/workspace.vim	/^    let Ws_Exit_Only_Window = 0$/;"	v
Ws_File	bundle/workspace/plugin/workspace.vim	/^    let Ws_File = ''$/;"	v
Ws_Get_Entry_Idx_By_Line	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Get_Entry_Idx_By_Line(prefix, lnum)$/;"	f
Ws_Get_Filenames	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Get_Filenames(prefix, idx, quote)$/;"	f
Ws_Inc_Winwidth	bundle/workspace/plugin/workspace.vim	/^        let Ws_Inc_Winwidth = 0$/;"	v
Ws_Inc_Winwidth	bundle/workspace/plugin/workspace.vim	/^        let Ws_Inc_Winwidth = 1$/;"	v
Ws_Init_Window	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Init_Window()$/;"	f
Ws_Load	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Load(ws_filename)$/;"	f
Ws_Load_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Load_Entry(prefix, index)$/;"	f
Ws_Open	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Open(preserve_win, ...)$/;"	f
Ws_Open_File	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Open_File(split_win)$/;"	f
Ws_Open_Window	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Open_Window()$/;"	f
Ws_Paste_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Paste_Entry(before)$/;"	f
Ws_Post_Close_Cleanup	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Post_Close_Cleanup()$/;"	f
Ws_Quote_Char	bundle/workspace/plugin/workspace.vim	/^        let Ws_Quote_Char = "'"$/;"	v
Ws_Quote_Char	bundle/workspace/plugin/workspace.vim	/^        let Ws_Quote_Char = '"'$/;"	v
Ws_Refresh	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Refresh()$/;"	f
Ws_Remove_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Remove_Entry(prefix, index)$/;"	f
Ws_Rename_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Rename_Entry(prefix, old_index, new_index, suffix)$/;"	f
Ws_Rename_Group	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Rename_Group()$/;"	f
Ws_Run	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Run(line1, line2, user_cmd, quote)$/;"	f
Ws_Save	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Save()$/;"	f
Ws_Save_Entry	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Save_Entry(prefix, index)$/;"	f
Ws_Session_Open	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Session_Open(workspace_name)$/;"	f
Ws_Session_Save	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Session_Save()$/;"	f
Ws_Show_Entry_Details	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Show_Entry_Details()$/;"	f
Ws_Toggle_Help_Text	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Toggle_Help_Text()$/;"	f
Ws_Toggle_Window	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Toggle_Window()$/;"	f
Ws_Use_Horiz_Window	bundle/workspace/plugin/workspace.vim	/^    let Ws_Use_Horiz_Window = 0$/;"	v
Ws_Use_Right_Window	bundle/workspace/plugin/workspace.vim	/^    let Ws_Use_Right_Window = 0$/;"	v
Ws_Use_Single_Click	bundle/workspace/plugin/workspace.vim	/^    let Ws_Use_Single_Click = 0$/;"	v
Ws_VimExit_Check	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_VimExit_Check()$/;"	f
Ws_Warn_Msg	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Warn_Msg(msg)$/;"	f
Ws_WinHeight	bundle/workspace/plugin/workspace.vim	/^    let Ws_WinHeight = 10$/;"	v
Ws_WinWidth	bundle/workspace/plugin/workspace.vim	/^    let Ws_WinWidth = 30$/;"	v
Ws_Zoom_Window	bundle/workspace/plugin/workspace.vim	/^function! s:Ws_Zoom_Window()$/;"	f
ZoomWindow	bundle/tagbar/autoload/tagbar.vim	/^function! s:ZoomWindow()$/;"	f
[%	bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> [% :<C-U>call <SID>MultiMatch("bW", "n") <CR>$/;"	m
[%	bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> [% v:<C-U>call <SID>MultiMatch("bW", "o") <CR>$/;"	m
[%	bundle/vim-matchit/plugin/matchit.vim	/^vmap [% <Esc>[%m'gv``$/;"	m
[%	bundle/vim-matchit/plugin/python_match.vim	/^nnoremap <buffer> <silent> [% :<C-U>call <SID>PyMatch('[%', 'n') <CR>$/;"	m
[%	bundle/vim-matchit/plugin/python_match.vim	/^onoremap <buffer> <silent> [% v:<C-U>call <SID>PyMatch('[%', 'o') <CR>$/;"	m
[%	bundle/vim-matchit/plugin/python_match.vim	/^vnoremap <buffer> <silent> [% :<C-U>call <SID>PyMatch('[%','v') <CR>m'gv``$/;"	m
]%	bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> ]% :<C-U>call <SID>MultiMatch("W",  "n") <CR>$/;"	m
]%	bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> ]% v:<C-U>call <SID>MultiMatch("W",  "o") <CR>$/;"	m
]%	bundle/vim-matchit/plugin/matchit.vim	/^vmap ]% <Esc>]%m'gv``$/;"	m
]%	bundle/vim-matchit/plugin/python_match.vim	/^nnoremap <buffer> <silent> ]% :<C-U>call <SID>PyMatch(']%',  'n') <CR>$/;"	m
]%	bundle/vim-matchit/plugin/python_match.vim	/^onoremap <buffer> <silent> ]% v:<C-U>call <SID>PyMatch(']%',  'o') <CR>$/;"	m
]%	bundle/vim-matchit/plugin/python_match.vim	/^vnoremap <buffer> <silent> ]% :<C-U>call <SID>PyMatch(']%','v') <CR>m'gv``$/;"	m
__delitem__	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def __delitem__(self, key):$/;"	m	class:ConqueScreen	file:
__getitem__	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def __getitem__(self, key):$/;"	m	class:ConqueScreen	file:
__init__	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def __init__(self):$/;"	m	class:ConqueScreen
__init__	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def __init__(self, mem_size, mem_type, mem_key, fixed_length=False, fill_char=' ', serialize=False, encoding='utf-8'):$/;"	m	class:ConqueSoleSharedMemory
__len__	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def __len__(self):$/;"	m	class:ConqueScreen	file:
__setitem__	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def __setitem__(self, key, value):$/;"	m	class:ConqueScreen	file:
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("BaseAddress",       c_void_p),$/;"	v	class:MEMORY_BASIC_INFORMATION
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Char", CHAR_UNION),$/;"	v	class:CHAR_INFO
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("EventType", c_short),$/;"	v	class:INPUT_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("KeyEvent", KEY_EVENT_RECORD),$/;"	v	class:INPUT_UNION
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Left", c_short),$/;"	v	class:SMALL_RECT
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("Length", c_ulong),$/;"	v	class:SECURITY_ATTRIBUTES
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("UnicodeChar", c_wchar),$/;"	v	class:CHAR_UNION
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("X", c_short),$/;"	v	class:COORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bKeyDown", c_byte),$/;"	v	class:KEY_EVENT_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("bSetFocus", c_byte)]$/;"	v	class:FOCUS_EVENT_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("cb",            c_ulong),$/;"	v	class:STARTUPINFO
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwCommandId", c_uint)]$/;"	v	class:MENU_EVENT_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwMousePosition", COORD),$/;"	v	class:MOUSE_EVENT_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD),$/;"	v	class:CONSOLE_SCREEN_BUFFER_INFO
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("dwSize", COORD)]$/;"	v	class:WINDOW_BUFFER_SIZE_RECORD
_fields_	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    _fields_ = [("hProcess",    c_void_p),$/;"	v	class:PROCESS_INFORMATION
_hideSelections	bundle/multiselect/autoload/multiselect.vim	/^function! s:_hideSelections() " {{{$/;"	f
_makeArgumentList	bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentList()$/;"	f
_makeArgumentString	bundle/genutils/autoload/genutils.vim	/^function! s:_makeArgumentString()$/;"	f
a%	bundle/vim-matchit/plugin/matchit.vim	/^vmap a% <Esc>[%v]%$/;"	m
abort	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def abort(self):$/;"	m	class:Conque
abort	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def abort(self):$/;"	m	class:ConqueSole
absolute_coords	bundle/conque-read-only/autoload/conque_term/conque.py	/^    absolute_coords = True$/;"	v	class:Conque
activateNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:activateNode(forceKeepWindowOpen)$/;"	f
add_conceal_color	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def add_conceal_color(self, text, attributes, stats, line_nr):$/;"	m	class:ConqueSole
add_methods	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:add_methods(namespace, method_names) abort$/;"	f
align	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def align(self):$/;"	m	class:ConqueScreen
append	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def append(self, value):$/;"	m	class:ConqueScreen
apply_color	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def apply_color(self, start, end, line=0):$/;"	m	class:Conque
attribute_cache	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    attribute_cache = {}$/;"	v	class:ConqueSole
attribute_cache	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    attribute_cache = {}$/;"	v	class:ConqueSoleSubprocess
attributes	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    attributes = []$/;"	v	class:ConqueSoleSubprocess
auto_read	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def auto_read(self):$/;"	m	class:Conque
autowrap	bundle/conque-read-only/autoload/conque_term/conque.py	/^    autowrap = True$/;"	v	class:Conque
b:current_syntax	bundle/django.vim/syntax/django.vim	/^let b:current_syntax = "django"$/;"	v
b:current_syntax	bundle/tagbar/syntax/tagbar.vim	/^let b:current_syntax = "tagbar"$/;"	v
b:loaded_py_match	bundle/vim-matchit/plugin/python_match.vim	/^let b:loaded_py_match = 1$/;"	v
b:loaded_toggle_mouse_plugin	bundle/vim-togglemouse/plugin/toggle_mouse.vim	/^let b:loaded_toggle_mouse_plugin = 1$/;"	v
bclose_multiple	bundle/bclose/plugin/bclose-old.vim	/^  let bclose_multiple = 1$/;"	v
beep	bundle/vim-surround/plugin/surround.vim	/^function! s:beep()$/;"	f
bindMappings	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bindMappings()$/;"	f
bookmarkNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bookmarkNode(...)$/;"	f
bottom	bundle/conque-read-only/autoload/conque_term/conque.py	/^    bottom = 24 # relative to top of screen$/;"	v	class:Conque
bound	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def bound(self, val, min, max):$/;"	m	class:Conque
bspattern	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:bspattern(pattern)$/;"	f
bucket	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    bucket = None$/;"	v	class:ConqueSoleWrapper
bufInWindows	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:bufInWindows(bnum)$/;"	f
buffer	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    buffer = None$/;"	v	class:ConqueScreen
buffer	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    buffer = None$/;"	v	class:ConqueSole
buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer(...) abort$/;"	f
buffer_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_commit() dict abort$/;"	f
buffer_compare_age	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_compare_age(commit) dict abort$/;"	f
buffer_containing_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_containing_commit() dict abort$/;"	f
buffer_expand	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_expand(rev) dict abort$/;"	f
buffer_getline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getline(lnum) dict abort$/;"	f
buffer_getvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_getvar(var) dict abort$/;"	f
buffer_height	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_height = 100$/;"	v	class:ConqueSoleSubprocess
buffer_name	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_name() dict abort$/;"	f
buffer_path	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_path(...) dict abort$/;"	f
buffer_redraw_ct	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    buffer_redraw_ct = 1$/;"	v	class:ConqueSole
buffer_repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_repo() dict abort$/;"	f
buffer_rev	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_rev() dict abort$/;"	f
buffer_setvar	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_setvar(var,value) dict abort$/;"	f
buffer_sha1	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_sha1() dict abort$/;"	f
buffer_spec	bundle/vim-fugitive/plugin/fugitive.vim	/^  function! s:buffer_spec() dict abort$/;"	f
buffer_type	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:buffer_type(...) dict abort$/;"	f
buffer_width	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    buffer_width = 160$/;"	v	class:ConqueSoleSubprocess
c	bundle/conque-read-only/autoload/conque_term/conque.py	/^    c = 1 # current cursor column$/;"	v	class:Conque
cProfile	bundle/conque-read-only/tests/profile.py	/^import cProfile$/;"	i
centerView	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:centerView()$/;"	f
chCwd	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chCwd()$/;"	f
chRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:chRoot()$/;"	f
change_title	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def change_title(self, key, val):$/;"	m	class:Conque
changesurround	bundle/vim-surround/plugin/surround.vim	/^function! s:changesurround() " {{{1$/;"	f
char_width	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    char_width = 1$/;"	v	class:ConqueSoleSharedMemory
character_set	bundle/conque-read-only/autoload/conque_term/conque.py	/^    character_set = 'ascii'$/;"	v	class:Conque
charset	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:charset()$/;"	f
charsetTag	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:charsetTag()$/;"	f
charset_graphics	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def charset_graphics(self):$/;"	m	class:Conque
charset_uk	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def charset_uk(self):$/;"	m	class:Conque
charset_us	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def charset_us(self):$/;"	m	class:Conque
checkForActivate	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForActivate()$/;"	f
checkForBrowse	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:checkForBrowse(dir)$/;"	f
check_commands	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def check_commands(self):$/;"	m	class:ConqueSoleSubprocess
clear	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def clear(self):$/;"	m	class:ConqueScreen
clear	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def clear(self, start=0):$/;"	m	class:ConqueSoleSharedMemory
clearBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:clearBookmarks(bookmarks)$/;"	f
close	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def close(self):$/;"	m	class:Conque
close	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def close(self):$/;"	m	class:ConqueSole
close	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def close(self):$/;"	m	class:ConqueSoleSharedMemory
close	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSoleSubprocess
close	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def close(self):$/;"	m	class:ConqueSoleWrapper
close	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def close(self):$/;"	m	class:ConqueSubprocess
closeChildren	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeChildren()$/;"	f
closeCurrentDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeCurrentDir()$/;"	f
closeTree	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTree()$/;"	f
closeTreeIfOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfOpen()$/;"	f
closeTreeIfQuitOnOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeIfQuitOnOpen()$/;"	f
closeTreeWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:closeTreeWindow()$/;"	f
close_pid	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def close_pid(self, pid):$/;"	m	class:ConqueSoleSubprocess
closematch	bundle/vim-surround/plugin/surround.vim	/^function! s:closematch(str) " {{{1$/;"	f
closetag	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:closetag()$/;"	f
closetagback	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:closetagback()$/;"	f
cmd	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^                cmd = shm_command.read()$/;"	v
cmd	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        cmd = shm_command.read()$/;"	v
cmd_line	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        cmd_line = " ".join(sys.argv[6:])$/;"	v
code_page	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        code_page = int(sys.argv[4])$/;"	v
color_cache	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    color_cache = {}$/;"	v	class:ConqueSole
color_changes	bundle/conque-read-only/autoload/conque_term/conque.py	/^    color_changes = {}$/;"	v	class:Conque
color_conceals	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    color_conceals = {}$/;"	v	class:ConqueSole
color_history	bundle/conque-read-only/autoload/conque_term/conque.py	/^    color_history = {}$/;"	v	class:Conque
color_mode	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    color_mode = None$/;"	v	class:ConqueSole
color_pruning	bundle/conque-read-only/autoload/conque_term/conque.py	/^    color_pruning = True$/;"	v	class:Conque
columns	bundle/conque-read-only/autoload/conque_term/conque.py	/^    columns = 80 # same as $COLUMNS$/;"	v	class:Conque
columns	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    columns = 80$/;"	v	class:ConqueSoleWrapper
command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:command(definition) abort$/;"	f
compareBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareBookmarks(first, second)$/;"	f
compareNodes	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:compareNodes(n1, n2)$/;"	f
compatibility_check	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:compatibility_check()$/;"	f
completeBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:completeBookmarks(A,L,P)$/;"	f
conque_profile	bundle/conque-read-only/tests/profile.py	/^def conque_profile():$/;"	f
conque_profile_idle	bundle/conque-read-only/tests/profile.py	/^def conque_profile_idle(terminal, seconds):$/;"	f
conque_term#bell	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#bell() " {{{$/;"	f
conque_term#call_hooks	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#call_hooks(event, t_obj) " {{{$/;"	f
conque_term#close_all	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#close_all() "{{{$/;"	f
conque_term#create_terminal_object	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#create_terminal_object(...) " {{{$/;"	f
conque_term#dependency_check	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#dependency_check() " {{{$/;"	f
conque_term#exec_file	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#exec_file() "{{{$/;"	f
conque_term#fail	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#fail(feature) " {{{$/;"	f
conque_term#find_python_exe	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#find_python_exe() " {{{$/;"	f
conque_term#get_instance	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#get_instance(...) " {{{$/;"	f
conque_term#init	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#init() " {{{$/;"	f
conque_term#init_conceal_color	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#init_conceal_color() " {{{$/;"	f
conque_term#key_press	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#key_press() "{{{$/;"	f
conque_term#load_python	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#load_python() " {{{$/;"	f
conque_term#on_blur	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#on_blur() " {{{$/;"	f
conque_term#on_focus	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#on_focus(...) " {{{$/;"	f
conque_term#open	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#open(...) "{{{$/;"	f
conque_term#read_all	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#read_all(insert_mode) "{{{$/;"	f
conque_term#register_function	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#register_function(event, function_name) " {{{$/;"	f
conque_term#resume_session	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#resume_session() " {{{$/;"	f
conque_term#send_file	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#send_file() "{{{$/;"	f
conque_term#send_selected	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#send_selected(type) "{{{$/;"	f
conque_term#set_buffer_settings	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#set_buffer_settings(command, vim_startup_commands) "{{{$/;"	f
conque_term#set_mappings	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#set_mappings(action) "{{{$/;"	f
conque_term#subprocess	bundle/conque-read-only/autoload/conque_term.vim	/^function! conque_term#subprocess(command) " {{{$/;"	f
console_height	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        console_height = int(sys.argv[3])$/;"	v
console_width	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        console_width = int(sys.argv[2])$/;"	v
create	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def create(self, access='write'):$/;"	m	class:ConqueSoleSharedMemory
createTreeWin	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:createTreeWin()$/;"	f
cs	bundle/vim-surround/plugin/surround.vim	/^  nmap cs  <Plug>Csurround$/;"	m
csi_add_spaces	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_add_spaces(self, csi):$/;"	m	class:Conque
csi_clear_line	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_clear_line(self, csi):$/;"	m	class:Conque
csi_clear_screen	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_clear_screen(self, csi):$/;"	m	class:Conque
csi_cursor	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor(self, csi):$/;"	m	class:Conque
csi_cursor_down	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor_down(self, csi):$/;"	m	class:Conque
csi_cursor_left	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor_left(self, csi):$/;"	m	class:Conque
csi_cursor_right	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor_right(self, csi):$/;"	m	class:Conque
csi_cursor_to_column	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor_to_column(self, csi):$/;"	m	class:Conque
csi_cursor_up	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_cursor_up(self, csi):$/;"	m	class:Conque
csi_delete_chars	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_delete_chars(self, csi):$/;"	m	class:Conque
csi_font	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_font(self, csi):$/;"	m	class:Conque
csi_reset	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_reset(self, csi):$/;"	m	class:Conque
csi_set	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_set(self, csi):$/;"	m	class:Conque
csi_set_coords	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_set_coords(self, csi):$/;"	m	class:Conque
csi_tab_clear	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def csi_tab_clear(self, csi):$/;"	m	class:Conque
ctl_bel	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_bel(self):$/;"	m	class:Conque
ctl_bs	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_bs(self):$/;"	m	class:Conque
ctl_cr	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_cr(self):$/;"	m	class:Conque
ctl_nl	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_nl(self):$/;"	m	class:Conque
ctl_si	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_si(self):$/;"	m	class:Conque
ctl_so	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_so(self):$/;"	m	class:Conque
ctl_soh	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_soh(self):$/;"	m	class:Conque
ctl_stx	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_stx(self):$/;"	m	class:Conque
ctl_tab	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def ctl_tab(self):$/;"	m	class:Conque
ctypes	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^import ctypes$/;"	i
ctypes	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^import ctypes$/;"	i
cursor_col	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_col = 0$/;"	v	class:ConqueSoleSubprocess
cursor_line	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    cursor_line = 0$/;"	v	class:ConqueSoleSubprocess
cursor_set	bundle/conque-read-only/autoload/conque_term/conque.py	/^    cursor_set = False$/;"	v	class:Conque
data	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    data = []$/;"	v	class:ConqueSoleSubprocess
default_attribute	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    default_attribute = 7$/;"	v	class:ConqueSoleSubprocess
define_commands	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:define_commands()$/;"	f
deleteBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:deleteBookmark()$/;"	f
delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^augroup delimitMate$/;"	a
delimitMate#BS	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BS() " {{{$/;"	f
delimitMate#BalancedParens	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#BalancedParens(char) "{{{$/;"	f
delimitMate#Del	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Del() " {{{$/;"	f
delimitMate#ExpandReturn	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandReturn() "{{{$/;"	f
delimitMate#ExpandSpace	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ExpandSpace() "{{{$/;"	f
delimitMate#Finish	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#Finish(move_back) " {{{$/;"	f
delimitMate#FlushBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#FlushBuffer() " {{{$/;"	f
delimitMate#GetCurrentSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegion() "{{{$/;"	f
delimitMate#GetCurrentSyntaxRegionIf	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetCurrentSyntaxRegionIf(char) "{{{$/;"	f
delimitMate#GetSyntaxRegion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#GetSyntaxRegion(line, col) "{{{$/;"	f
delimitMate#IsCRExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsCRExpansion() " {{{$/;"	f
delimitMate#IsEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsEmptyPair(str) "{{{$/;"	f
delimitMate#IsForbidden	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsForbidden(char) "{{{$/;"	f
delimitMate#IsSpaceExpansion	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#IsSpaceExpansion() " {{{$/;"	f
delimitMate#JumpAny	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpAny(key) " {{{$/;"	f
delimitMate#JumpMany	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpMany() " {{{$/;"	f
delimitMate#JumpOut	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#JumpOut(char) "{{{$/;"	f
delimitMate#OptionsList	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#OptionsList() "{{{$/;"	f
delimitMate#ParenDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ParenDelim(char) " {{{$/;"	f
delimitMate#QuoteDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#QuoteDelim(char) "{{{$/;"	f
delimitMate#RmBuffer	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#RmBuffer(num) " {{{$/;"	f
delimitMate#ShouldJump	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#ShouldJump() "{{{$/;"	f
delimitMate#SkipDelim	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#SkipDelim(char) "{{{$/;"	f
delimitMate#TestMappings	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#TestMappings() "{{{$/;"	f
delimitMate#WithinEmptyPair	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WithinEmptyPair() "{{{$/;"	f
delimitMate#WriteAfter	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteAfter(str) "{{{$/;"	f
delimitMate#WriteBefore	bundle/delimitMate/autoload/delimitMate.vim	/^function! delimitMate#WriteBefore(str) "{{{$/;"	f
delimitMateTests#Main	bundle/delimitMate/autoload/delimitMateTests.vim	/^function! delimitMateTests#Main()$/;"	f
delimitMate_loaded	bundle/delimitMate/autoload/delimitMate.vim	/^let delimitMate_loaded = 1$/;"	v
delimitMate_version	bundle/delimitMate/plugin/delimitMate.vim	/^let delimitMate_version = "2.6"$/;"	v
did_django_syn_inits	bundle/django.vim/syntax/django.vim	/^    let did_django_syn_inits = 1$/;"	v
diff_window_count	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diff_window_count()$/;"	f
diffoff	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff()$/;"	f
diffoff_all	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffoff_all(dir)$/;"	f
diffthis	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:diffthis()$/;"	f
disableescape	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:disableescape()$/;"	f
displayHelp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:displayHelp()$/;"	f
do_color	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def do_color(self, start=0, end=0, attributes='', stats=None):$/;"	m	class:ConqueSole
doctypeSeek	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:doctypeSeek()$/;"	f
dosurround	bundle/vim-surround/plugin/surround.vim	/^function! s:dosurround(...) " {{{1$/;"	f
ds	bundle/vim-surround/plugin/surround.vim	/^  nmap ds  <Plug>Dsurround$/;"	m
dumpHelp	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:dumpHelp()$/;"	f
echo	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echo(msg)$/;"	f
echo	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echo(msg)$/;"	f
echoError	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoError(msg)$/;"	f
echoWarning	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:echoWarning(msg)$/;"	f
echoWarning	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:echoWarning(msg)$/;"	f
enable_colors	bundle/conque-read-only/autoload/conque_term/conque.py	/^    enable_colors = True$/;"	v	class:Conque
encoding	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    encoding = None$/;"	v	class:ConqueSole
encoding	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    encoding = 'utf-8'$/;"	v	class:ConqueSoleSharedMemory
esc_next_line	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def esc_next_line(self):$/;"	m	class:Conque
esc_scroll_down	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def esc_scroll_down(self):$/;"	m	class:Conque
esc_scroll_up	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def esc_scroll_up(self):$/;"	m	class:Conque
esc_set_tab	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def esc_set_tab(self):$/;"	m	class:Conque
exec	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:exec(cmd)$/;"	f
exec_highlight	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def exec_highlight(self, buffer_line, start, end, highlight):$/;"	m	class:Conque
extractafter	bundle/vim-surround/plugin/surround.vim	/^function! s:extractafter(str)$/;"	f
extractbefore	bundle/vim-surround/plugin/surround.vim	/^function! s:extractbefore(str)$/;"	f
fast_mode	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        fast_mode = int(sys.argv[5])$/;"	v
fast_mode	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    fast_mode = 0$/;"	v	class:ConqueSoleSubprocess
fcntl	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import fcntl$/;"	i
fd	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    fd = None$/;"	v	class:ConqueSubprocess
find	autoload/pathogen.vim	/^function! s:find(count,cmd,file,lcd) " {{{1$/;"	f
findAndRevealPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:findAndRevealPath()$/;"	f
firstUsableWindow	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:firstUsableWindow()$/;"	f
fixed_length	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    fixed_length = False$/;"	v	class:ConqueSoleSharedMemory
fixindent	bundle/vim-surround/plugin/surround.vim	/^function! s:fixindent(str,spc)$/;"	f
fnameescape	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:fnameescape(file) abort$/;"	f
fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive$/;"	a
fugitive#buffer	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#buffer(...) abort$/;"	f
fugitive#reload_status	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#reload_status() abort$/;"	f
fugitive#repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#repo(...)$/;"	f
fugitive#statusline	bundle/vim-fugitive/plugin/fugitive.vim	/^function! fugitive#statusline(...)$/;"	f
fugitive_blame	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_blame$/;"	a
fugitive_commit	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_commit$/;"	a
fugitive_diff	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_diff$/;"	a
fugitive_files	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_files$/;"	a
fugitive_remove	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_remove$/;"	a
fugitive_temp	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_temp$/;"	a
fugitive_utility	bundle/vim-fugitive/plugin/fugitive.vim	/^augroup fugitive_utility$/;"	a
function	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:function(name) abort$/;"	f
g%	bundle/vim-matchit/plugin/matchit.vim	/^nnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'n') <CR>$/;"	m
g%	bundle/vim-matchit/plugin/matchit.vim	/^onoremap <silent> g% v:<C-U>call <SID>Match_wrapper('',0,'o') <CR>$/;"	m
g%	bundle/vim-matchit/plugin/matchit.vim	/^vnoremap <silent> g% :<C-U>call <SID>Match_wrapper('',0,'v') <CR>m'gv``$/;"	m
g%	bundle/vim-matchit/plugin/python_match.vim	/^nnoremap <buffer> <silent> g% :<C-U>call <SID>PyMatch('g%','n') <CR>$/;"	m
g%	bundle/vim-matchit/plugin/python_match.vim	/^onoremap <buffer> <silent> g% v:<C-U>call <SID>PyMatch('g%','o') <CR>$/;"	m
g%	bundle/vim-matchit/plugin/python_match.vim	/^vnoremap <buffer> <silent> g% :<C-U>call <SID>PyMatch('g%','v') <CR>m'gv``$/;"	m
g:ConqueTerm_CWInsert	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_CWInsert = 0$/;"	v
g:ConqueTerm_CloseOnEnd	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_CloseOnEnd = 0$/;"	v
g:ConqueTerm_CodePage	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_CodePage = 0$/;"	v
g:ConqueTerm_Color	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_Color = 1$/;"	v
g:ConqueTerm_ColorMode	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_ColorMode = ''$/;"	v
g:ConqueTerm_EscKey	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_EscKey = '<Esc>'$/;"	v
g:ConqueTerm_ExecFileKey	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_ExecFileKey = '<F11>'$/;"	v
g:ConqueTerm_FastMode	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_FastMode = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque-read-only/autoload/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_Idx	bundle/conque-read-only/plugin/conque_term.vim	/^let g:ConqueTerm_Idx = 0$/;"	v
g:ConqueTerm_InsertCharPre	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertCharPre = 0$/;"	v
g:ConqueTerm_InsertOnEnter	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_InsertOnEnter = 0$/;"	v
g:ConqueTerm_Loaded	bundle/conque-read-only/plugin/conque_term.vim	/^let g:ConqueTerm_Loaded = 1$/;"	v
g:ConqueTerm_PromptRegex	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_PromptRegex = '^\\w\\+@[0-9A-Za-z_.-]\\+:[0-9A-Za-z_.\/\\~,:-]\\+\\$'$/;"	v
g:ConqueTerm_PyExe	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_PyExe = ''$/;"	v
g:ConqueTerm_PyVersion	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_PyVersion = 2$/;"	v
g:ConqueTerm_ReadUnfocused	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_ReadUnfocused = 0$/;"	v
g:ConqueTerm_SendFileKey	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFileKey = '<F10>'$/;"	v
g:ConqueTerm_SendFunctionKeys	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_SendFunctionKeys = 0$/;"	v
g:ConqueTerm_SendVisKey	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_SendVisKey = '<F9>'$/;"	v
g:ConqueTerm_SessionSupport	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_SessionSupport = 0$/;"	v
g:ConqueTerm_StartMessages	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_StartMessages = 1$/;"	v
g:ConqueTerm_Syntax	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_Syntax = 'conque_term'$/;"	v
g:ConqueTerm_TERM	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_TERM =  'vt100'$/;"	v
g:ConqueTerm_Terminals	bundle/conque-read-only/autoload/conque_term.vim	/^let g:ConqueTerm_Terminals = {}$/;"	v
g:ConqueTerm_TerminalsString	bundle/conque-read-only/autoload/conque_term.vim	/^let g:ConqueTerm_TerminalsString = ''$/;"	v
g:ConqueTerm_ToggleKey	bundle/conque-read-only/plugin/conque_term.vim	/^    let g:ConqueTerm_ToggleKey = '<F8>'$/;"	v
g:ConqueTerm_Version	bundle/conque-read-only/plugin/conque_term.vim	/^let g:ConqueTerm_Version = 230$/;"	v
g:NERDTreeBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeBookmark = s:Bookmark$/;"	v
g:NERDTreeDirNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeDirNode = s:TreeDirNode$/;"	v
g:NERDTreeFileNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreeFileNode = s:TreeFileNode$/;"	v
g:NERDTreeIgnore	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeIgnore = ['\\~$']$/;"	v
g:NERDTreePath	bundle/nerdtree/plugin/NERD_tree.vim	/^let g:NERDTreePath = s:Path$/;"	v
g:NERDTreeSortOrder	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeSortOrder = ['\\\/$', '*', '\\.swp$',  '\\.bak$', '\\~$']$/;"	v
g:NERDTreeStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^    let g:NERDTreeStatusline = "%{exists('b:NERDTreeRoot')?b:NERDTreeRoot.path.str():''}"$/;"	v
g:ST_WIN_CMD	bundle/genutils/autoload/genutils.vim	/^let g:ST_WIN_CMD = 0 | let g:ST_WIN_SH = 1 | let g:ST_UNIX = 2$/;"	v
g:autoclose_loaded	bundle/autoclose/plugin/autoclose.vim	/^let g:autoclose_loaded = 1$/;"	v
g:autoclose_on	bundle/autoclose/plugin/autoclose.vim	/^    let g:autoclose_on = 0$/;"	v
g:autoclose_on	bundle/autoclose/plugin/autoclose.vim	/^    let g:autoclose_on = 1$/;"	v
g:delimitMate_excluded_ft	bundle/delimitMate/autoload/delimitMateTests.vim	/^	let g:delimitMate_excluded_ft = "vim"$/;"	v
g:did_ft	bundle/snipmate.vim/plugin/snipMate.vim	/^let g:did_ft = {}$/;"	v
g:fugitive_git_executable	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_git_executable = 'git'$/;"	v
g:fugitive_summary_format	bundle/vim-fugitive/plugin/fugitive.vim	/^  let g:fugitive_summary_format = '%s'$/;"	v
g:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let g:loaded_delimitMate = 1$/;"	v
g:loaded_fugitive	bundle/vim-fugitive/plugin/fugitive.vim	/^let g:loaded_fugitive = 1$/;"	v
g:loaded_nerdtree_exec_menuitem	bundle/nerdtree/nerdtree_plugin/exec_menuitem.vim	/^let g:loaded_nerdtree_exec_menuitem = 1$/;"	v
g:loaded_nerdtree_fs_menu	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^let g:loaded_nerdtree_fs_menu = 1$/;"	v
g:loaded_pathogen	autoload/pathogen.vim	/^let g:loaded_pathogen = 1$/;"	v
g:loaded_ragtag	bundle/vim-ragtag/plugin/ragtag.vim	/^let g:loaded_ragtag = 1$/;"	v
g:loaded_repeat	bundle/vim-repeat/autoload/repeat.vim	/^let g:loaded_repeat = 1$/;"	v
g:loaded_surround	bundle/vim-surround/plugin/surround.vim	/^let g:loaded_surround = 1$/;"	v
g:loaded_tagbar	bundle/tagbar/autoload/tagbar.vim	/^let g:loaded_tagbar = 1$/;"	v
g:makeArgumentList	bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentList = 'exec genutils#MakeArgumentList()'$/;"	v
g:makeArgumentString	bundle/genutils/autoload/genutils.vim	/^let g:makeArgumentString = 'exec genutils#MakeArgumentString()'$/;"	v
g:miniBufExplBufList	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplBufList = ''$/;"	v
g:miniBufExplDoneClickSave	bundle/minibufexpl/plugin/minibufexpl.vim	/^    let  g:miniBufExplDoneClickSave = 1$/;"	v
g:miniBufExplForceDisplay	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplForceDisplay = 0$/;"	v
g:miniBufExplForceSyntaxEnable	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplForceSyntaxEnable = 0$/;"	v
g:miniBufExplInAutoUpdate	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplInAutoUpdate = 0$/;"	v
g:miniBufExplMapCTabSwitchBufs	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchBufs = 0$/;"	v
g:miniBufExplMapCTabSwitchWindows	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMapCTabSwitchWindows = 0$/;"	v
g:miniBufExplMapWindowNav	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNav = 0$/;"	v
g:miniBufExplMapWindowNavArrows	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavArrows = 0$/;"	v
g:miniBufExplMapWindowNavVim	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMapWindowNavVim = 0$/;"	v
g:miniBufExplMaxHeight	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxHeight = 0$/;"	v
g:miniBufExplMaxSize	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMaxSize = g:miniBufExplMaxHeight$/;"	v
g:miniBufExplMinHeight	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMinHeight = 1$/;"	v
g:miniBufExplMinSize	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplMinSize = g:miniBufExplMinHeight$/;"	v
g:miniBufExplModSelTarget	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplModSelTarget = 0$/;"	v
g:miniBufExplSplitBelow	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitBelow = &splitbelow$/;"	v
g:miniBufExplSplitToEdge	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplSplitToEdge = 1$/;"	v
g:miniBufExplTabWrap	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplTabWrap = 0$/;"	v
g:miniBufExplUseSingleClick	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplUseSingleClick = 0$/;"	v
g:miniBufExplVSplit	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplVSplit = 0$/;"	v
g:miniBufExplorerAutoUpdate	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplorerAutoUpdate = 0$/;"	v
g:miniBufExplorerDebugLevel	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugLevel = 0 $/;"	v
g:miniBufExplorerDebugMode	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugMode = 3 $/;"	v
g:miniBufExplorerDebugOutput	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplorerDebugOutput = ''$/;"	v
g:miniBufExplorerMoreThanOne	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let g:miniBufExplorerMoreThanOne = 2$/;"	v
g:multiselAbortOnErrors	bundle/multiselect/plugin/multiselect.vim	/^  let g:multiselAbortOnErrors = 1$/;"	v
g:multiselMouseSelAddKey	bundle/multiselect/plugin/multiselect.vim	/^  let g:multiselMouseSelAddKey = 'Left'$/;"	v
g:multiselMouseSelAddMod	bundle/multiselect/plugin/multiselect.vim	/^  let g:multiselMouseSelAddMod = 'C-'$/;"	v
g:multiselQuickSelAdds	bundle/multiselect/plugin/multiselect.vim	/^  let g:multiselQuickSelAdds = 0$/;"	v
g:multiselUseSynHi	bundle/multiselect/plugin/multiselect.vim	/^  let g:multiselUseSynHi = 0$/;"	v
g:nerdtree_tabs_autoclose	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_autoclose = 1$/;"	v
g:nerdtree_tabs_focus_on_files	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_focus_on_files = 0$/;"	v
g:nerdtree_tabs_meaningful_tab_names	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_meaningful_tab_names = 1$/;"	v
g:nerdtree_tabs_open_on_console_startup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_console_startup = 0$/;"	v
g:nerdtree_tabs_open_on_gui_startup	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_gui_startup = 1$/;"	v
g:nerdtree_tabs_open_on_new_tab	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_open_on_new_tab = 1$/;"	v
g:nerdtree_tabs_smart_startup_focus	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_smart_startup_focus = 1$/;"	v
g:nerdtree_tabs_synchronize_view	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let g:nerdtree_tabs_synchronize_view = 1$/;"	v
g:repeat_tick	bundle/vim-repeat/autoload/repeat.vim	/^let g:repeat_tick = -1$/;"	v
g:tagbar_autoclose	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autoclose = 0$/;"	v
g:tagbar_autofocus	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autofocus = 0$/;"	v
g:tagbar_autoshowtag	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_autoshowtag = 0$/;"	v
g:tagbar_compact	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_compact = 0$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = '\/opt\/local\/bin\/ctags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = '\/usr\/local\/bin\/ctags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags-exuberant'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'ctags.exe'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'exctags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'exuberant-ctags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^        let g:tagbar_ctags_bin = 'tags'$/;"	v
g:tagbar_ctags_bin	bundle/tagbar/autoload/tagbar.vim	/^    let g:tagbar_ctags_bin = expand(g:tagbar_ctags_bin)$/;"	v
g:tagbar_expand	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_expand = 0$/;"	v
g:tagbar_foldlevel	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_foldlevel = 99$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['+', '-']$/;"	v
g:tagbar_iconchars	bundle/tagbar/plugin/tagbar.vim	/^        let g:tagbar_iconchars = ['▶', '▼']$/;"	v
g:tagbar_left	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_left = 0$/;"	v
g:tagbar_singleclick	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_singleclick = 0$/;"	v
g:tagbar_sort	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_sort = 1$/;"	v
g:tagbar_systemenc	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_systemenc = &encoding$/;"	v
g:tagbar_updateonsave_maxlines	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_updateonsave_maxlines = 5000$/;"	v
g:tagbar_width	bundle/tagbar/plugin/tagbar.vim	/^    let g:tagbar_width = 40$/;"	v
genutils#AddNotifyWindowClose	bundle/genutils/autoload/genutils.vim	/^function! genutils#AddNotifyWindowClose(windowTitle, functionName)$/;"	f
genutils#AddToFCShellPre	bundle/genutils/autoload/genutils.vim	/^function! genutils#AddToFCShellPre(funcName)$/;"	f
genutils#AlignWordWithWordInPreviousLine	bundle/genutils/autoload/genutils.vim	/^function! genutils#AlignWordWithWordInPreviousLine()$/;"	f
genutils#ArrayVarExists	bundle/genutils/autoload/genutils.vim	/^function! genutils#ArrayVarExists(varName, index)$/;"	f
genutils#BinInsertSort	bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort(cmp, direction) range$/;"	f
genutils#BinInsertSort2	bundle/genutils/autoload/genutils.vim	/^function! genutils#BinInsertSort2(start, end, cmp, direction, accessor, mover, context)$/;"	f
genutils#BinSearchForInsert	bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert(start, end, line, cmp, direction)$/;"	f
genutils#BinSearchForInsert2	bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchForInsert2(start, end, line, cmp, direction,$/;"	f
genutils#BinSearchList	bundle/genutils/autoload/genutils.vim	/^function! genutils#BinSearchList(list, start, end, item, cmp)$/;"	f
genutils#CenterWordInSpace	bundle/genutils/autoload/genutils.vim	/^function! genutils#CenterWordInSpace()$/;"	f
genutils#CheckWindowClose	bundle/genutils/autoload/genutils.vim	/^function! genutils#CheckWindowClose()$/;"	f
genutils#CleanDiffOptions	bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanDiffOptions()$/;"	f
genutils#CleanupFileName	bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName(fileName)$/;"	f
genutils#CleanupFileName2	bundle/genutils/autoload/genutils.vim	/^function! genutils#CleanupFileName2(fileName, win32ProtectedChars)$/;"	f
genutils#ClearAllSigns	bundle/genutils/autoload/genutils.vim	/^function! genutils#ClearAllSigns()$/;"	f
genutils#CloseWinNoEa	bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWinNoEa(winnr, force)$/;"	f
genutils#CloseWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#CloseWindow(win, force)$/;"	f
genutils#CmpByLength	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLength(line1, line2, ...)$/;"	f
genutils#CmpByLineLengthNname	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByLineLengthNname(line1, line2, ...)$/;"	f
genutils#CmpByNumber	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByNumber(line1, line2, ...)$/;"	f
genutils#CmpByString	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByString(line1, line2, ...)$/;"	f
genutils#CmpByStringIgnoreCase	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpByStringIgnoreCase(line1, line2, ...)$/;"	f
genutils#CmpJavaImports	bundle/genutils/autoload/genutils.vim	/^function! genutils#CmpJavaImports(line1, line2, ...)$/;"	f
genutils#CommonPath	bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonPath(path1, path2, ...)$/;"	f
genutils#CommonString	bundle/genutils/autoload/genutils.vim	/^function! genutils#CommonString(str1, str2)$/;"	f
genutils#CrUnProtectedCharsPattern	bundle/genutils/autoload/genutils.vim	/^function! genutils#CrUnProtectedCharsPattern(chars, ...)$/;"	f
genutils#CreateArgString	bundle/genutils/autoload/genutils.vim	/^function! genutils#CreateArgString(argList, sep, ...)$/;"	f
genutils#CurLineHasSign	bundle/genutils/autoload/genutils.vim	/^function! genutils#CurLineHasSign()$/;"	f
genutils#DeEscape	bundle/genutils/autoload/genutils.vim	/^function! genutils#DeEscape(str)$/;"	f
genutils#DebugShowArgs	bundle/genutils/autoload/genutils.vim	/^function! genutils#DebugShowArgs(...)$/;"	f
genutils#DefFCShellInstall	bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellInstall()$/;"	f
genutils#DefFCShellUninstall	bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFCShellUninstall()$/;"	f
genutils#DefFileChangedShell	bundle/genutils/autoload/genutils.vim	/^function! genutils#DefFileChangedShell()$/;"	f
genutils#EatChar	bundle/genutils/autoload/genutils.vim	/^function! genutils#EatChar(pat)$/;"	f
genutils#Escape	bundle/genutils/autoload/genutils.vim	/^function! genutils#Escape(str, chars)$/;"	f
genutils#EscapeCommand	bundle/genutils/autoload/genutils.vim	/^function! genutils#EscapeCommand(cmd, args, pipe)$/;"	f
genutils#ExpandStr	bundle/genutils/autoload/genutils.vim	/^function! genutils#ExpandStr(str)$/;"	f
genutils#ExtractFuncListing	bundle/genutils/autoload/genutils.vim	/^function! genutils#ExtractFuncListing(funcName, hLines, tLines)$/;"	f
genutils#FindBufferForName	bundle/genutils/autoload/genutils.vim	/^function! genutils#FindBufferForName(fileName)$/;"	f
genutils#FindWindowForBuffer	bundle/genutils/autoload/genutils.vim	/^function! genutils#FindWindowForBuffer(bufferName, checkUnlisted)$/;"	f
genutils#GetBufNameForAu	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetBufNameForAu(bufName)$/;"	f
genutils#GetColPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetColPosition(id)$/;"	f
genutils#GetLastWinnrInStack	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLastWinnrInStack(dir)$/;"	f
genutils#GetLinePosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetLinePosition(id)$/;"	f
genutils#GetNextWinnrInStack	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetNextWinnrInStack(dir)$/;"	f
genutils#GetPersistentVar	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPersistentVar(pluginName, persistentVar, default)$/;"	f
genutils#GetPreviewWinnr	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetPreviewWinnr()$/;"	f
genutils#GetSelectedIndex	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSelectedIndex()$/;"	f
genutils#GetShellEnvType	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetShellEnvType()$/;"	f
genutils#GetSpacer	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetSpacer(width)$/;"	f
genutils#GetVimCmdOutput	bundle/genutils/autoload/genutils.vim	/^function! genutils#GetVimCmdOutput(cmd)$/;"	f
genutils#IsOnlyHorizontalWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyHorizontalWindow()$/;"	f
genutils#IsOnlyVerticalWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#IsOnlyVerticalWindow()$/;"	f
genutils#IsPositionSet	bundle/genutils/autoload/genutils.vim	/^function! genutils#IsPositionSet(id)$/;"	f
genutils#MakeArgumentList	bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentList(...)$/;"	f
genutils#MakeArgumentString	bundle/genutils/autoload/genutils.vim	/^function! genutils#MakeArgumentString(...)$/;"	f
genutils#MapAppendCascaded	bundle/genutils/autoload/genutils.vim	/^function! genutils#MapAppendCascaded(lhs, rhs, mapMode)$/;"	f
genutils#MarkActiveWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#MarkActiveWindow()$/;"	f
genutils#MoveCurLineToWinLine	bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCurLineToWinLine(n)$/;"	f
genutils#MoveCursorToLastInWinStack	bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToLastInWinStack(dir)$/;"	f
genutils#MoveCursorToNextInWinStack	bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToNextInWinStack(dir)$/;"	f
genutils#MoveCursorToWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#MoveCursorToWindow(winno)$/;"	f
genutils#NumberOfWindows	bundle/genutils/autoload/genutils.vim	/^function! genutils#NumberOfWindows()$/;"	f
genutils#OnMS	bundle/genutils/autoload/genutils.vim	/^function! genutils#OnMS()$/;"	f
genutils#OpenWinNoEa	bundle/genutils/autoload/genutils.vim	/^function! genutils#OpenWinNoEa(winOpenCmd)$/;"	f
genutils#OptClearBuffer	bundle/genutils/autoload/genutils.vim	/^function! genutils#OptClearBuffer()$/;"	f
genutils#PathIsAbsolute	bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsAbsolute(path)$/;"	f
genutils#PathIsFileNameOnly	bundle/genutils/autoload/genutils.vim	/^function! genutils#PathIsFileNameOnly(path)$/;"	f
genutils#PromptForElement	bundle/genutils/autoload/genutils.vim	/^function! genutils#PromptForElement(array, default, msg, skip, useDialog,$/;"	f
genutils#PutPersistentVar	bundle/genutils/autoload/genutils.vim	/^function! genutils#PutPersistentVar(pluginName, persistentVar, value)$/;"	f
genutils#QSort	bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort(cmp, direction) range$/;"	f
genutils#QSort2	bundle/genutils/autoload/genutils.vim	/^function! genutils#QSort2(start, end, cmp, direction, accessor, swapper, context)$/;"	f
genutils#QuoteStr	bundle/genutils/autoload/genutils.vim	/^function! genutils#QuoteStr(str)$/;"	f
genutils#RelPathFromDir	bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromDir(srcDir, tgtFile)$/;"	f
genutils#RelPathFromFile	bundle/genutils/autoload/genutils.vim	/^function! genutils#RelPathFromFile(srcFile, tgtFile)$/;"	f
genutils#RemoveFromFCShellPre	bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveFromFCShellPre(funcName)$/;"	f
genutils#RemoveNotifyWindowClose	bundle/genutils/autoload/genutils.vim	/^function! genutils#RemoveNotifyWindowClose(windowTitle)$/;"	f
genutils#ResetHardPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPosition(id)$/;"	f
genutils#ResetHardPositionWithContext	bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetHardPositionWithContext(id)$/;"	f
genutils#ResetSoftPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetSoftPosition(id)$/;"	f
genutils#ResetWindowSettings	bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings()$/;"	f
genutils#ResetWindowSettings2	bundle/genutils/autoload/genutils.vim	/^function! genutils#ResetWindowSettings2(id)$/;"	f
genutils#RestoreActiveWindow	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreActiveWindow()$/;"	f
genutils#RestoreHardPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPosition(id)$/;"	f
genutils#RestoreHardPositionWithContext	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreHardPositionWithContext(id)$/;"	f
genutils#RestoreSoftPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreSoftPosition(id)$/;"	f
genutils#RestoreVisualSelection	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreVisualSelection(id)$/;"	f
genutils#RestoreWindowSettings	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings()$/;"	f
genutils#RestoreWindowSettings2	bundle/genutils/autoload/genutils.vim	/^function! genutils#RestoreWindowSettings2(id)$/;"	f
genutils#Roman2Decimal	bundle/genutils/autoload/genutils.vim	/^function! genutils#Roman2Decimal(str)$/;"	f
genutils#SaveHardPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPosition(id)$/;"	f
genutils#SaveHardPositionWithContext	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveHardPositionWithContext(id)$/;"	f
genutils#SaveSoftPosition	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveSoftPosition(id)$/;"	f
genutils#SaveVisualSelection	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveVisualSelection(id)$/;"	f
genutils#SaveWindowSettings	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings()$/;"	f
genutils#SaveWindowSettings2	bundle/genutils/autoload/genutils.vim	/^function! genutils#SaveWindowSettings2(id, overwrite)$/;"	f
genutils#SetupScratchBuffer	bundle/genutils/autoload/genutils.vim	/^function! genutils#SetupScratchBuffer()$/;"	f
genutils#ShiftWordInSpace	bundle/genutils/autoload/genutils.vim	/^function! genutils#ShiftWordInSpace(dir)$/;"	f
genutils#ShowLinesWithSyntax	bundle/genutils/autoload/genutils.vim	/^function! genutils#ShowLinesWithSyntax() range$/;"	f
genutils#SilentDelete	bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentDelete(arg1, ...)$/;"	f
genutils#SilentSubstitute	bundle/genutils/autoload/genutils.vim	/^function! genutils#SilentSubstitute(pat, cmd)$/;"	f
genutils#UnEscape	bundle/genutils/autoload/genutils.vim	/^function! genutils#UnEscape(str, chars)$/;"	f
genutils#UserDirComplete2	bundle/genutils/autoload/genutils.vim	/^function! genutils#UserDirComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileComplete	bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete(ArgLead, CmdLine, CursorPos, smartSlash,$/;"	f
genutils#UserFileComplete2	bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileComplete2(ArgLead, CmdLine, CursorPos, ...)$/;"	f
genutils#UserFileExpand	bundle/genutils/autoload/genutils.vim	/^function! genutils#UserFileExpand(fileArgs)$/;"	f
getPath	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getPath(ln)$/;"	f
getTreeWinNum	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:getTreeWinNum()$/;"	f
get_buffer_info	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def get_buffer_info(self):$/;"	m	class:ConqueSoleSubprocess
get_buffer_line	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def get_buffer_line(self, line):$/;"	m	class:Conque
get_buffer_line	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueScreen
get_buffer_line	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def get_buffer_line(self, line):$/;"	m	class:ConqueSole
get_new_output	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def get_new_output(self, lines, update_top, stats):$/;"	m	class:ConqueSole
get_real_idx	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def get_real_idx(self, line):$/;"	m	class:ConqueScreen
get_screen_text	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def get_screen_text(self):$/;"	m	class:ConqueSoleSubprocess
get_stats	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def get_stats(self):$/;"	m	class:ConqueSoleWrapper
get_top	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def get_top(self):$/;"	m	class:ConqueScreen
getchar	bundle/vim-surround/plugin/surround.vim	/^function! s:getchar()$/;"	f
getinput	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:getinput()$/;"	f
gg	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal gg$/;"	m
ggVG"_d	bundle/delimitMate/autoload/delimitMateTests.vim	/^	normal ggVG"_d$/;"	m
github_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:github_url(repo,url,rev,commit,path,type,line1,line2) abort$/;"	f
gsub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:gsub(str,pat,rep) abort$/;"	f
handle	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    handle = None$/;"	v	class:ConqueSoleSubprocess
handle	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    handle = None$/;"	v	class:ConqueSoleWrapper
handleMiddleMouse	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:handleMiddleMouse()$/;"	f
hash_screen_alignment_test	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def hash_screen_alignment_test(self):$/;"	m	class:Conque
highlight_groups	bundle/conque-read-only/autoload/conque_term/conque.py	/^    highlight_groups = {}$/;"	v	class:Conque
htmlDis	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:htmlDis()$/;"	f
htmlEn	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:htmlEn()$/;"	f
idle	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def idle(self):$/;"	m	class:Conque
idle	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def idle(self):$/;"	m	class:ConqueSole
idle	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def idle(self):$/;"	m	class:ConqueSoleWrapper
idle_sleep_time	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        idle_sleep_time = 0.10$/;"	v
indentLevelFor	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:indentLevelFor(line)$/;"	f
init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:init() "{{{$/;"	f
initNerdTree	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTree(name)$/;"	f
initNerdTreeInPlace	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeInPlace(dir)$/;"	f
initNerdTreeMirror	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initNerdTreeMirror()$/;"	f
initVariable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:initVariable(var, value)$/;"	f
init_shared_memory	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleSubprocess
init_shared_memory	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def init_shared_memory(self, mem_key):$/;"	m	class:ConqueSoleWrapper
init_tabstops	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def init_tabstops(self):$/;"	m	class:Conque
input_buffer	bundle/conque-read-only/autoload/conque_term/conque.py	/^    input_buffer = []$/;"	v	class:Conque
inputreplacement	bundle/vim-surround/plugin/surround.vim	/^function! s:inputreplacement()$/;"	f
inputtarget	bundle/vim-surround/plugin/surround.vim	/^function! s:inputtarget()$/;"	f
insert	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def insert(self, line, value):$/;"	m	class:ConqueScreen
insert	bundle/vim-surround/plugin/surround.vim	/^function! s:insert(...) " {{{1$/;"	f
insertTag	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:insertTag(tag)$/;"	f
insert_enter	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def insert_enter(self):$/;"	m	class:Conque
instaweb_url	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:instaweb_url(repo,rev,commit,path,type,...) abort$/;"	f
isTreeOpen	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isTreeOpen()$/;"	f
isWindowUsable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:isWindowUsable(winnumber)$/;"	f
is_alive	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleSubprocess
is_alive	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    is_alive = True$/;"	v	class:ConqueSoleSubprocess
is_alive	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def is_alive(self):$/;"	m	class:ConqueSoleWrapper
is_alive	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def is_alive(self):$/;"	m	class:ConqueSubprocess
is_idle	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = False$/;"	v
is_idle	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^                        is_idle = True$/;"	v
is_idle	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^                is_idle = True$/;"	v
is_idle	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        is_idle = False$/;"	v
javascriptIncludeTag	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:javascriptIncludeTag()$/;"	f
javascriptType	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:javascriptType()$/;"	f
jumpToChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToChild(direction)$/;"	f
jumpToFirstChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToFirstChild()$/;"	f
jumpToLastChild	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToLastChild()$/;"	f
jumpToParent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToParent()$/;"	f
jumpToRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToRoot()$/;"	f
jumpToSibling	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:jumpToSibling(forward)$/;"	f
known_files.get	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.get(fname) dict$/;"	f
known_files.getCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.getCurrent() dict$/;"	f
known_files.has	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.has(fname) dict$/;"	f
known_files.put	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.put(fileinfo, ...) dict$/;"	f
known_files.rm	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.rm(fname) dict$/;"	f
known_files.setCurrent	bundle/tagbar/autoload/tagbar.vim	/^function! s:known_files.setCurrent(fileinfo) dict$/;"	f
l	bundle/conque-read-only/autoload/conque_term/conque.py	/^    l = 1 # current cursor line$/;"	v	class:Conque
length	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:length(str)$/;"	f
line_offset	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    line_offset = 0$/;"	v	class:ConqueSoleSubprocess
lines	bundle/conque-read-only/autoload/conque_term/conque.py	/^    lines = 24 # same as $LINES$/;"	v	class:Conque
lines	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    lines = 24$/;"	v	class:ConqueSoleWrapper
loaded_bclose	bundle/bclose/plugin/bclose-old.vim	/^let loaded_bclose = 1$/;"	v
loaded_genutils	bundle/genutils/plugin/genutils.vim	/^let loaded_genutils = 205$/;"	v
loaded_matchit	bundle/vim-matchit/plugin/matchit.vim	/^let loaded_matchit = 1$/;"	v
loaded_minibufexplorer	bundle/minibufexpl/plugin/minibufexpl.vim	/^let loaded_minibufexplorer = 1$/;"	v
loaded_multiselect	bundle/multiselect/plugin/multiselect.vim	/^let loaded_multiselect = 202$/;"	v
loaded_nerd_comments	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let loaded_nerd_comments = 1$/;"	v
loaded_nerd_tree	bundle/nerdtree/plugin/NERD_tree.vim	/^let loaded_nerd_tree = 1$/;"	v
loaded_snips	bundle/snipmate.vim/plugin/snipMate.vim	/^let loaded_snips = 1$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^            let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^        let loaded_taglist = 'no'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^    let loaded_taglist = 'fast_load_done'$/;"	v
loaded_taglist	bundle/taglist/plugin/taglist.vim	/^let loaded_taglist = 'available'$/;"	v
loaded_work	bundle/workspace/plugin/workspace.vim	/^let loaded_work = 1$/;"	v
logging	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import logging # DEBUG$/;"	i
loops	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        loops = 0$/;"	v
math	bundle/conque-read-only/autoload/conque_term/conque.py	/^import math$/;"	i
max_loops	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        max_loops = 0$/;"	v
mem_key	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        mem_key = sys.argv[1]$/;"	v
mem_key	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_key = None$/;"	v	class:ConqueSoleSharedMemory
mem_redraw_ct	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    mem_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
mem_size	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_size = None$/;"	v	class:ConqueSoleSharedMemory
mem_type	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    mem_type = None$/;"	v	class:ConqueSoleSharedMemory
mmap	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^import mmap$/;"	i
multiselect#AddSelection	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#AddSelection(fline, lline) " {{{$/;"	f
multiselect#AddSelectionsByDiffHlGroup	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#AddSelectionsByDiffHlGroup(fline, lline, group, negate) " {{{$/;"	f
multiselect#AddSelectionsByExpr	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#AddSelectionsByExpr(fline, lline, expr, negate, ...) " {{{$/;"	f
multiselect#AddSelectionsByMatch	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#AddSelectionsByMatch(fline, lline, pat, negate) " {{{$/;"	f
multiselect#AddSelectionsBySynGroup	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#AddSelectionsBySynGroup(fline, lline, group, negate) " {{{$/;"	f
multiselect#ClearSelection	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#ClearSelection(fline, lline) " {{{$/;"	f
multiselect#DeleteSelection	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#DeleteSelection() " {{{$/;"	f
multiselect#ExecCmdOnSelection	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#ExecCmdOnSelection(theCommand, normalMode) " {{{$/;"	f
multiselect#HideSelections	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#HideSelections() " {{{$/;"	f
multiselect#InvertSelections	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#InvertSelections(fline, lline) " {{{$/;"	f
multiselect#NextSelection	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#NextSelection(dir) " {{{$/;"	f
multiselect#RefreshSelections	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#RefreshSelections() " {{{$/;"	f
multiselect#RestoreSelections	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#RestoreSelections()"{{{$/;"	f
multiselect#ShowSelections	bundle/multiselect/autoload/multiselect.vim	/^function! multiselect#ShowSelections() " {{{$/;"	f
nextBufferName	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:nextBufferName()$/;"	f
offset	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    offset = 0$/;"	v	class:ConqueSole
open	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def open(self):$/;"	m	class:Conque
open	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def open(self):$/;"	m	class:ConqueSole
open	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def open(self, cmd, mem_key, options={}):$/;"	m	class:ConqueSoleSubprocess
open	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def open(self, cmd, lines, columns, python_exe='python.exe', communicator_py='conque_sole_communicator.py', options={}):$/;"	m	class:ConqueSoleWrapper
open	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def open(self, command, env={}):$/;"	m	class:ConqueSubprocess
openBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openBookmark(name)$/;"	f
openEntrySplit	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openEntrySplit(vertical, forceKeepWindowOpen)$/;"	f
openExplorer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openExplorer()$/;"	f
openInNewTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openInNewTab(stayCurrentTab)$/;"	f
openNodeRecursively	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:openNodeRecursively()$/;"	f
opfunc	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc(type,...) " {{{1$/;"	f
opfunc2	bundle/vim-surround/plugin/surround.vim	/^function! s:opfunc2(arg)$/;"	f
option_init	bundle/delimitMate/plugin/delimitMate.vim	/^function! s:option_init(name, default) "{{{$/;"	f
options	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        options = {'LINES': console_height, 'COLUMNS': console_width, 'CODE_PAGE': code_page, 'FAST_MODE': fast_mode}$/;"	v
os	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import os # DEBUG$/;"	i
os	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^import os$/;"	i
os	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import os$/;"	i
output_blocks	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    output_blocks = 1$/;"	v	class:ConqueSoleSubprocess
p	bundle/conque-read-only/tests/profile.py	/^p = pstats.Stats('conque_profile_output')$/;"	v
parse_csi	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def parse_csi(self, s):$/;"	m	class:Conque
pathogen#cycle_filetype	autoload/pathogen.vim	/^function! pathogen#cycle_filetype() " {{{1$/;"	f
pathogen#fnameescape	autoload/pathogen.vim	/^function! pathogen#fnameescape(string) " {{{1$/;"	f
pathogen#glob	autoload/pathogen.vim	/^function! pathogen#glob(pattern) abort " {{{1$/;"	f
pathogen#glob_directories	autoload/pathogen.vim	/^function! pathogen#glob_directories(pattern) abort " {{{1$/;"	f
pathogen#helptags	autoload/pathogen.vim	/^function! pathogen#helptags() " {{{1$/;"	f
pathogen#infect	autoload/pathogen.vim	/^function! pathogen#infect(...) abort " {{{1$/;"	f
pathogen#is_disabled	autoload/pathogen.vim	/^function! pathogen#is_disabled(path) " {{{1$/;"	f
pathogen#join	autoload/pathogen.vim	/^function! pathogen#join(...) abort " {{{1$/;"	f
pathogen#legacyjoin	autoload/pathogen.vim	/^function! pathogen#legacyjoin(...) abort " {{{1$/;"	f
pathogen#runtime_append_all_bundles	autoload/pathogen.vim	/^function! pathogen#runtime_append_all_bundles(...) " {{{1$/;"	f
pathogen#runtime_findfile	autoload/pathogen.vim	/^function! pathogen#runtime_findfile(file,count) "{{{1$/;"	f
pathogen#runtime_prepend_subdirectories	autoload/pathogen.vim	/^function! pathogen#runtime_prepend_subdirectories(path) " {{{1$/;"	f
pathogen#separator	autoload/pathogen.vim	/^function! pathogen#separator() abort " {{{1$/;"	f
pathogen#split	autoload/pathogen.vim	/^function! pathogen#split(path) abort " {{{1$/;"	f
pathogen#uniq	autoload/pathogen.vim	/^function! pathogen#uniq(list) abort " {{{1$/;"	f
pickle	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    import cPickle as pickle$/;"	i
pickle	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    import pickle$/;"	i
pid	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    pid = None$/;"	v	class:ConqueSoleSubprocess
pid	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    pid = None$/;"	v	class:ConqueSoleWrapper
pid	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    pid = 0$/;"	v	class:ConqueSubprocess
plain_text	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def plain_text(self, input):$/;"	m	class:Conque
plain_text	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def plain_text(self, line_nr, text, attributes, stats):$/;"	m	class:ConqueSole
previewNode	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:previewNode(openNewWin)$/;"	f
proc	bundle/conque-read-only/autoload/conque_term/conque.py	/^    proc = None$/;"	v	class:Conque
proc	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        proc = ConqueSoleSubprocess()$/;"	v
proc	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    proc = None$/;"	v	class:ConqueSoleWrapper
process	bundle/vim-surround/plugin/surround.vim	/^function! s:process(string)$/;"	f
promptToDelBuffer	bundle/nerdtree/nerdtree_plugin/fs_menu.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
promptToDelBuffer	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:promptToDelBuffer(bufnum, msg)$/;"	f
prune_colors	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def prune_colors(self):$/;"	m	class:Conque
pstats	bundle/conque-read-only/tests/profile.py	/^import pstats$/;"	i
pty	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import pty$/;"	i
putCursorInTreeWin	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorInTreeWin()$/;"	f
putCursorOnBookmarkTable	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:putCursorOnBookmarkTable()$/;"	f
ragtag	bundle/vim-ragtag/plugin/ragtag.vim	/^  augroup ragtag$/;"	a
re	bundle/conque-read-only/autoload/conque_term/conque.py	/^import re$/;"	i
re	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import re$/;"	i
re	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^import re$/;"	i
read	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:Conque
read	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def read(self, timeout=1, set_cursor=True, return_output=False, update_buffer=True):$/;"	m	class:ConqueSole
read	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def read(self, chars=1, start=0):$/;"	m	class:ConqueSoleSharedMemory
read	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def read(self):$/;"	m	class:ConqueSoleSubprocess
read	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def read(self, start_line, num_lines, timeout=0):$/;"	m	class:ConqueSoleWrapper
read	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def read(self, timeout=1):$/;"	m	class:ConqueSubprocess
read_count	bundle/conque-read-only/autoload/conque_term/conque.py	/^    read_count = 0$/;"	v	class:Conque
recall	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:recall()$/;"	f
redraw	bundle/vim-surround/plugin/surround.vim	/^function! s:redraw()$/;"	f
refreshCurrent	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshCurrent()$/;"	f
refreshRoot	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:refreshRoot()$/;"	f
reindent	bundle/vim-surround/plugin/surround.vim	/^function! s:reindent() " {{{1$/;"	f
renderBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderBookmarks()$/;"	f
renderView	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderView()$/;"	f
renderViewSavingPosition	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:renderViewSavingPosition()$/;"	f
repeat	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:repeat(str,cnt)$/;"	f
repeat	bundle/vim-repeat/autoload/repeat.vim	/^function! s:repeat(count)$/;"	f
repeat#set	bundle/vim-repeat/autoload/repeat.vim	/^function! repeat#set(sequence,...)$/;"	f
repeatPlugin	bundle/vim-repeat/autoload/repeat.vim	/^augroup repeatPlugin$/;"	a
repo	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo(...) abort$/;"	f
repo_aliases	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_aliases() dict abort$/;"	f
repo_bare	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_bare() dict abort$/;"	f
repo_config	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_config(conf) dict abort$/;"	f
repo_dir	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dir(...) dict abort$/;"	f
repo_dirglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_dirglob(base) dict abort$/;"	f
repo_git_chomp	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp(...) dict abort$/;"	f
repo_git_chomp_in_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_chomp_in_tree(...) dict abort$/;"	f
repo_git_command	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_git_command(...) dict abort$/;"	f
repo_head_ref	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_head_ref() dict abort$/;"	f
repo_keywordprg	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_keywordprg() dict abort$/;"	f
repo_rev_parse	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_rev_parse(rev) dict abort$/;"	f
repo_superglob	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_superglob(base) dict abort$/;"	f
repo_translate	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_translate(spec) dict abort$/;"	f
repo_tree	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_tree(...) dict abort$/;"	f
repo_user	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:repo_user() dict abort$/;"	f
res	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        res = proc.open(cmd_line, mem_key, options)$/;"	v
reset_console	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def reset_console(self, buf_info, add_block=True):$/;"	m	class:ConqueSoleSubprocess
reset_size	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def reset_size(self, line):$/;"	m	class:ConqueScreen
restoreScreenState	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:restoreScreenState()$/;"	f
resume	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def resume(self):$/;"	m	class:Conque
resume	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def resume(self):$/;"	m	class:ConqueSole
resume	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def resume(self):$/;"	m	class:ConqueSoleWrapper
revealBookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:revealBookmark(name)$/;"	f
s:BaseTag	bundle/tagbar/autoload/tagbar.vim	/^let s:BaseTag = {}$/;"	v
s:Bookmark	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Bookmark = {}$/;"	v
s:C	bundle/genutils/autoload/genutils.vim	/^let s:C = 100$/;"	v
s:D	bundle/genutils/autoload/genutils.vim	/^let s:D = 500$/;"	v
s:FileInfo	bundle/tagbar/autoload/tagbar.vim	/^let s:FileInfo = {}$/;"	v
s:I	bundle/genutils/autoload/genutils.vim	/^let s:I = 1$/;"	v
s:KeyMap	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:KeyMap = {}$/;"	v
s:KindheaderTag	bundle/tagbar/autoload/tagbar.vim	/^let s:KindheaderTag = copy(s:BaseTag)$/;"	v
s:L	bundle/genutils/autoload/genutils.vim	/^let s:L = 50$/;"	v
s:M	bundle/genutils/autoload/genutils.vim	/^let s:M = 1000$/;"	v
s:MenuController	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuController = {}$/;"	v
s:MenuItem	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:MenuItem = {}$/;"	v
s:NERDFileNameEscape	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:NERDFileNameEscape="[]#*$%'\\" ?`!&();<>\\\\"$/;"	v
s:NERDTreeBufName	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeBufName = 'NERD_tree_'$/;"	v
s:NERDTreeSortStarIndex	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERDTreeSortStarIndex = index(g:NERDTreeSortOrder, '*')$/;"	v
s:NERD_tree_version	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:NERD_tree_version = '4.2.0'$/;"	v
s:NormalTag	bundle/tagbar/autoload/tagbar.vim	/^let s:NormalTag = copy(s:BaseTag)$/;"	v
s:Path	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:Path = {}$/;"	v
s:PseudoTag	bundle/tagbar/autoload/tagbar.vim	/^let s:PseudoTag = copy(s:BaseTag)$/;"	v
s:Tlist_Skip_Refresh	bundle/taglist/plugin/taglist.vim	/^let s:Tlist_Skip_Refresh = 0$/;"	v
s:TreeDirNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeDirNode = copy(s:TreeFileNode)$/;"	v
s:TreeFileNode	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:TreeFileNode = {}$/;"	v
s:UNPROTECTED_CHAR_PRFX	bundle/genutils/autoload/genutils.vim	/^let s:UNPROTECTED_CHAR_PRFX = '\\%(\\%([^\\\\]\\|^\\)\\\\\\%(\\\\\\\\\\)*\\)\\@<!' " Doesn't eat slashes.$/;"	v
s:V	bundle/genutils/autoload/genutils.vim	/^let s:V = 5$/;"	v
s:X	bundle/genutils/autoload/genutils.vim	/^let s:X = 10$/;"	v
s:abstract_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:abstract_prototype = {}$/;"	v
s:access_symbols	bundle/tagbar/autoload/tagbar.vim	/^let s:access_symbols = {$/;"	v
s:all1	bundle/vim-matchit/plugin/python_match.vim	/^let s:all1 = s:ini1 . '\\|' . s:tail1$/;"	v
s:all2	bundle/vim-matchit/plugin/python_match.vim	/^let s:all2 = s:ini2 . '\\|' . s:tail2$/;"	v
s:autocommands_done	bundle/tagbar/autoload/tagbar.vim	/^let s:autocommands_done = 0$/;"	v
s:buffer_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:buffer_prototype = {}$/;"	v
s:checked_ctags	bundle/tagbar/autoload/tagbar.vim	/^let s:checked_ctags     = 0$/;"	v
s:clickmap	bundle/minibufexpl/plugin/minibufexpl.vim	/^  let s:clickmap = ':if bufname("%") == "-MiniBufExplorer-" <bar> call <SID>MBEClick() <bar> endif <CR>'$/;"	v
s:closeStack	bundle/autoclose/plugin/autoclose.vim	/^let s:closeStack = []$/;"	v
s:commands	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:commands = []$/;"	v
s:cotstate	bundle/autoclose/plugin/autoclose.vim	/^let s:cotstate = &completeopt$/;"	v
s:cpo_save	bundle/taglist/plugin/taglist.vim	/^let s:cpo_save = &cpo$/;"	v
s:cpo_save	bundle/workspace/plugin/workspace.vim	/^let s:cpo_save = &cpo$/;"	v
s:debug	bundle/tagbar/autoload/tagbar.vim	/^let s:debug = 0$/;"	v
s:debugIndex	bundle/minibufexpl/plugin/minibufexpl.vim	/^let s:debugIndex = 0 $/;"	v
s:debug_file	bundle/tagbar/autoload/tagbar.vim	/^let s:debug_file = ''$/;"	v
s:defFCShellInstalled	bundle/genutils/autoload/genutils.vim	/^let s:defFCShellInstalled = 0$/;"	v
s:delimiterMap	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:delimiterMap = {$/;"	v
s:did_snip_helper	bundle/snipmate.vim/ftplugin/html_snip_helper.vim	/^let s:did_snip_helper = 1$/;"	v
s:did_snips_mappings	bundle/snipmate.vim/after/plugin/snipMate.vim	/^let s:did_snips_mappings = 1$/;"	v
s:disable_handlers_for_tabdo	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^let s:disable_handlers_for_tabdo = 0$/;"	v
s:done_bundles	autoload/pathogen.vim	/^let s:done_bundles = ''$/;"	v
s:escape_chars	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " \\\\`\\|\\"#%&,?()\\*^<>[]"$/;"	v
s:escape_chars	bundle/nerdtree/plugin/NERD_tree.vim	/^    let s:escape_chars =  " `\\|\\"#%&,?()\\*^<>"$/;"	v
s:fcShellPreFuncs	bundle/genutils/autoload/genutils.vim	/^  let s:fcShellPreFuncs = {}$/;"	v
s:hooks	bundle/conque-read-only/autoload/conque_term.vim	/^let s:hooks = { 'after_startup': [], 'buffer_enter': [], 'buffer_leave': [], 'after_keymap': [] }$/;"	v
s:ic	bundle/tagbar/syntax/tagbar.vim	/^    let s:ic = '\\' . s:ic$/;"	v
s:ic	bundle/tagbar/syntax/tagbar.vim	/^let s:ic = g:tagbar_iconchars[0]$/;"	v
s:icon_closed	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_closed = g:tagbar_iconchars[0]$/;"	v
s:icon_open	bundle/tagbar/autoload/tagbar.vim	/^let s:icon_open   = g:tagbar_iconchars[1]$/;"	v
s:inExecution	bundle/multiselect/autoload/multiselect.vim	/^let s:inExecution = 0$/;"	v
s:ini1	bundle/vim-matchit/plugin/python_match.vim	/^let s:ini1 = 'try\\|if'$/;"	v
s:ini2	bundle/vim-matchit/plugin/python_match.vim	/^let s:ini2 = 'for\\|while' $/;"	v
s:initialized	bundle/conque-read-only/autoload/conque_term.vim	/^let s:initialized = 0$/;"	v
s:io	bundle/tagbar/syntax/tagbar.vim	/^    let s:io = '\\' . s:io$/;"	v
s:io	bundle/tagbar/syntax/tagbar.vim	/^let s:io = g:tagbar_iconchars[1]$/;"	v
s:known_files	bundle/tagbar/autoload/tagbar.vim	/^let s:known_files = {$/;"	v
s:last_highlight_tline	bundle/tagbar/autoload/tagbar.vim	/^let s:last_highlight_tline = 0$/;"	v
s:last_mps	bundle/vim-matchit/plugin/matchit.vim	/^let s:last_mps = ""$/;"	v
s:last_words	bundle/vim-matchit/plugin/matchit.vim	/^let s:last_words = ":"$/;"	v
s:lenSpaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:lenSpaceStr = strlen(s:spaceStr)$/;"	v
s:loaded_delimitMate	bundle/delimitMate/plugin/delimitMate.vim	/^let s:loaded_delimitMate = 1$/;"	v
s:loaded_functions	bundle/vim-matchit/plugin/python_match.vim	/^let s:loaded_functions = 1$/;"	v
s:m	bundle/minibufexpl/plugin/minibufexpl.vim	/^    let  s:m = ':nnoremap <silent> <LEFTMOUSE> <LEFTMOUSE>'$/;"	v
s:m	bundle/minibufexpl/plugin/minibufexpl.vim	/^    let  s:m = s:m . s:clickmap$/;"	v
s:m	bundle/minibufexpl/plugin/minibufexpl.vim	/^    let  s:m = s:m . substitute(substitute(maparg('<LEFTMOUSE>', 'n'), '|', '<bar>', 'g'), '\\c^<LEFTMOUSE>', '', '')$/;"	v
s:makeArgumentList	bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentList = ''$/;"	v
s:makeArgumentString	bundle/genutils/autoload/genutils.vim	/^let s:makeArgumentString = ''$/;"	v
s:maxTabWidth	bundle/minibufexpl/plugin/minibufexpl.vim	/^let s:maxTabWidth = 0 $/;"	v
s:menu_char_prefix	bundle/taglist/plugin/taglist.vim	/^let s:menu_char_prefix =$/;"	v
s:mySNR	bundle/genutils/autoload/genutils.vim	/^let s:mySNR = ''$/;"	v
s:nerdtree_globally_active	bundle/vim-nerdtree-tabs/nerdtree_plugin/vim-nerdtree-tabs.vim	/^  let s:nerdtree_globally_active = 0$/;"	v
s:next_buffer_number	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:next_buffer_number = 1$/;"	v
s:notifyWindow	bundle/genutils/autoload/genutils.vim	/^let s:notifyWindow = {}$/;"	v
s:notslash	bundle/vim-matchit/plugin/matchit.vim	/^let s:notslash = '\\\\\\@<!\\%(\\\\\\\\\\)*'$/;"	v
s:old_cpo	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:old_cpo = &cpo$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '[' . s:ic . s:io . ']\\([-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=#\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=+\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . ' ]\\)\\@<=-\\([^-+# ]\\)\\@='$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '] \\)\\@<=[^-+: ]\\+[^:]\\+$'$/;"	v
s:pattern	bundle/tagbar/syntax/tagbar.vim	/^let s:pattern = '\\([' . s:ic . s:io . '][-+# ]\\)\\@<=[^*]\\+\\(\\*\\?\\(([^)]\\+)\\)\\? :\\)\\@='$/;"	v
s:repo_prototype	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repo_prototype = {}$/;"	v
s:repos	bundle/vim-fugitive/plugin/fugitive.vim	/^let s:repos = {}$/;"	v
s:running_windows	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:running_windows = has("win16") || has("win32") || has("win64")$/;"	v
s:save_cpo	bundle/genutils/autoload/genutils.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-matchit/plugin/matchit.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_cpo	bundle/vim-matchit/plugin/python_match.vim	/^let s:save_cpo = &cpo$/;"	v
s:save_updatetime	bundle/conque-read-only/autoload/conque_term.vim	/^let s:save_updatetime = &updatetime$/;"	v
s:saved_terminals	bundle/conque-read-only/autoload/conque_term.vim	/^        let s:saved_terminals = {}$/;"	v
s:scriptdir	bundle/conque-read-only/autoload/conque_term.vim	/^let s:scriptdir = expand("<sfile>:h") . '\/'$/;"	v
s:scriptdirpy	bundle/conque-read-only/autoload/conque_term.vim	/^let s:scriptdirpy = expand("<sfile>:h") . '\/conque_term\/'$/;"	v
s:selection	bundle/genutils/autoload/genutils.vim	/^let s:selection = -1$/;"	v
s:snippets	bundle/snipmate.vim/plugin/snipMate.vim	/^let s:snippets = {} | let s:multi_snips = {}$/;"	v
s:spaceStr	bundle/nerdcommenter/plugin/NERD_commenter.vim	/^let s:spaceStr = ' '$/;"	v
s:spacer	bundle/genutils/autoload/genutils.vim	/^let s:spacer= "                                                               ".$/;"	v
s:tail1	bundle/vim-matchit/plugin/python_match.vim	/^let s:tail1 = 'except\\|finally'$/;"	v
s:tail1	bundle/vim-matchit/plugin/python_match.vim	/^let s:tail1 = s:tail1 . '\\|elif\\|else'$/;"	v
s:tail2	bundle/vim-matchit/plugin/python_match.vim	/^let s:tail2 = 'break\\|continue'$/;"	v
s:temp_files	bundle/vim-fugitive/plugin/fugitive.vim	/^  let s:temp_files = {}$/;"	v
s:term_obj	bundle/conque-read-only/autoload/conque_term.vim	/^let s:term_obj = {'idx': 1, 'var': '', 'is_buffer': 1, 'active': 1, 'buffer_name': '', 'command': ''}$/;"	v
s:tlist_app_name	bundle/taglist/plugin/taglist.vim	/^let s:tlist_app_name = "none"$/;"	v
s:tlist_brief_help	bundle/taglist/plugin/taglist.vim	/^let s:tlist_brief_help = 1$/;"	v
s:tlist_cur_file_idx	bundle/taglist/plugin/taglist.vim	/^let s:tlist_cur_file_idx = -1$/;"	v
s:tlist_debug	bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug = 0$/;"	v
s:tlist_debug_file	bundle/taglist/plugin/taglist.vim	/^let s:tlist_debug_file = ''$/;"	v
s:tlist_def_asm_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_asm_settings = 'asm;d:define;l:label;m:macro;t:type'$/;"	v
s:tlist_def_aspperl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspperl_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_aspvbs_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_aspvbs_settings = 'asp;f:function;s:sub;v:variable'$/;"	v
s:tlist_def_awk_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_awk_settings = 'awk;f:function'$/;"	v
s:tlist_def_beta_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_beta_settings = 'beta;f:fragment;s:slot;v:pattern'$/;"	v
s:tlist_def_c_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_c_settings = 'c;d:macro;g:enum;s:struct;u:union;t:typedef;' .$/;"	v
s:tlist_def_cobol_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cobol_settings = 'cobol;d:data;f:file;g:group;p:paragraph;' .$/;"	v
s:tlist_def_cpp_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cpp_settings = 'c++;n:namespace;v:variable;d:macro;t:typedef;' .$/;"	v
s:tlist_def_cs_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_cs_settings = 'c#;d:macro;t:typedef;n:namespace;c:class;' .$/;"	v
s:tlist_def_csh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_csh_settings = 'sh;f:function'$/;"	v
s:tlist_def_eiffel_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_eiffel_settings = 'eiffel;c:class;f:feature'$/;"	v
s:tlist_def_erlang_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_erlang_settings = 'erlang;d:macro;r:record;m:module;f:function'$/;"	v
s:tlist_def_expect_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_expect_settings = 'tcl;c:class;f:method;p:procedure'$/;"	v
s:tlist_def_fortran_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_fortran_settings = 'fortran;p:program;b:block data;' .$/;"	v
s:tlist_def_html_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_html_settings = 'html;a:anchor;f:javascript function'$/;"	v
s:tlist_def_java_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_java_settings = 'java;p:package;c:class;i:interface;' .$/;"	v
s:tlist_def_javascript_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_javascript_settings = 'javascript;f:function'$/;"	v
s:tlist_def_lisp_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lisp_settings = 'lisp;f:function'$/;"	v
s:tlist_def_lua_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_lua_settings = 'lua;f:function'$/;"	v
s:tlist_def_make_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_make_settings = 'make;m:macro'$/;"	v
s:tlist_def_pascal_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_pascal_settings = 'pascal;f:function;p:procedure'$/;"	v
s:tlist_def_perl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_perl_settings = 'perl;c:constant;l:label;p:package;s:subroutine'$/;"	v
s:tlist_def_php_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_php_settings = 'php;c:class;d:constant;v:variable;f:function'$/;"	v
s:tlist_def_python_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_python_settings = 'python;c:class;m:member;f:function'$/;"	v
s:tlist_def_rexx_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_rexx_settings = 'rexx;s:subroutine'$/;"	v
s:tlist_def_ruby_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_ruby_settings = 'ruby;c:class;f:method;F:function;' .$/;"	v
s:tlist_def_scheme_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_scheme_settings = 'scheme;s:set;f:function'$/;"	v
s:tlist_def_sh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sh_settings = 'sh;f:function'$/;"	v
s:tlist_def_slang_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_slang_settings = 'slang;n:namespace;f:function'$/;"	v
s:tlist_def_sml_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sml_settings = 'sml;e:exception;c:functor;s:signature;' .$/;"	v
s:tlist_def_sql_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_sql_settings = 'sql;c:cursor;F:field;P:package;r:record;' .$/;"	v
s:tlist_def_tcl_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_tcl_settings = 'tcl;c:class;f:method;m:method;p:procedure'$/;"	v
s:tlist_def_vera_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vera_settings = 'vera;c:class;d:macro;e:enumerator;' .$/;"	v
s:tlist_def_verilog_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_verilog_settings = 'verilog;m:module;c:constant;P:parameter;' .$/;"	v
s:tlist_def_vim_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_vim_settings = 'vim;a:autocmds;v:variable;f:function'$/;"	v
s:tlist_def_yacc_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_yacc_settings = 'yacc;l:label'$/;"	v
s:tlist_def_zsh_settings	bundle/taglist/plugin/taglist.vim	/^let s:tlist_def_zsh_settings = 'sh;f:function'$/;"	v
s:tlist_file_count	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_count = 0$/;"	v
s:tlist_file_lnum_idx_cache	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_lnum_idx_cache = -1$/;"	v
s:tlist_file_name_idx_cache	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_name_idx_cache = -1$/;"	v
s:tlist_file_names	bundle/taglist/plugin/taglist.vim	/^let s:tlist_file_names=''$/;"	v
s:tlist_ftype_count	bundle/taglist/plugin/taglist.vim	/^let s:tlist_ftype_count = 0$/;"	v
s:tlist_menu_empty	bundle/taglist/plugin/taglist.vim	/^let s:tlist_menu_empty = 1$/;"	v
s:tlist_msg	bundle/taglist/plugin/taglist.vim	/^    let s:tlist_msg = ''$/;"	v
s:tlist_removed_flist	bundle/taglist/plugin/taglist.vim	/^let s:tlist_removed_flist = ""$/;"	v
s:tlist_sid	bundle/taglist/plugin/taglist.vim	/^    let s:tlist_sid = substitute(maparg('<SID>xx'), '<SNR>\\(\\d\\+_\\)xx$',$/;"	v
s:tlist_win_maximized	bundle/taglist/plugin/taglist.vim	/^let s:tlist_win_maximized = 0$/;"	v
s:tlist_winsize_chgd	bundle/taglist/plugin/taglist.vim	/^let s:tlist_winsize_chgd = -1$/;"	v
s:tree_markup_reg	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_markup_reg = '^[ `|]*[\\-+~▾▸ ]\\+'$/;"	v
s:tree_up_dir_line	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_up_dir_line	bundle/nerdtree/syntax/nerdtree.vim	/^let s:tree_up_dir_line = '.. (up a dir)'$/;"	v
s:tree_wid	bundle/nerdtree/plugin/NERD_tree.vim	/^let s:tree_wid = 2$/;"	v
s:type_init_done	bundle/tagbar/autoload/tagbar.vim	/^let s:type_init_done    = 0$/;"	v
s:window_expanded	bundle/tagbar/autoload/tagbar.vim	/^let s:window_expanded   = 0$/;"	v
s:windows_vk	bundle/conque-read-only/autoload/conque_term.vim	/^let s:windows_vk = {$/;"	v
s:ws_app_name	bundle/workspace/plugin/workspace.vim	/^let s:ws_app_name = "none"$/;"	v
s:ws_brief_help	bundle/workspace/plugin/workspace.vim	/^let s:ws_brief_help = 1$/;"	v
s:ws_deleted_count	bundle/workspace/plugin/workspace.vim	/^let s:ws_deleted_count = 0$/;"	v
s:ws_entry_count	bundle/workspace/plugin/workspace.vim	/^let s:ws_entry_count = 0$/;"	v
s:ws_entry_name	bundle/workspace/plugin/workspace.vim	/^let s:ws_entry_name = 'Workspace'$/;"	v
s:ws_entry_type	bundle/workspace/plugin/workspace.vim	/^let s:ws_entry_type = 'workspace'$/;"	v
s:ws_modified	bundle/workspace/plugin/workspace.vim	/^let s:ws_modified = 0$/;"	v
s:ws_win_maximized	bundle/workspace/plugin/workspace.vim	/^let s:ws_win_maximized = 0$/;"	v
s:ws_winsize_chgd	bundle/workspace/plugin/workspace.vim	/^let s:ws_winsize_chgd = 0$/;"	v
saveScreenState	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:saveScreenState()$/;"	f
save_cpo	bundle/delimitMate/plugin/delimitMate.vim	/^let save_cpo = &cpo$/;"	v
screen	bundle/conque-read-only/autoload/conque_term/conque.py	/^    screen = None$/;"	v	class:Conque
screen_encoding	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    screen_encoding = 'utf-8'$/;"	v	class:ConqueScreen
screen_height	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    screen_height = 80$/;"	v	class:ConqueScreen
screen_redraw_ct	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    screen_redraw_ct = 1$/;"	v	class:ConqueSole
screen_redraw_ct	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    screen_redraw_ct = 0$/;"	v	class:ConqueSoleSubprocess
screen_top	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    screen_top = 1$/;"	v	class:ConqueScreen
screen_width	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    screen_width = 80$/;"	v	class:ConqueScreen
select	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import select$/;"	i
serialize	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    serialize = False$/;"	v	class:ConqueSoleSharedMemory
setCommonBufOptions	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setCommonBufOptions()$/;"	f
set_cursor	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def set_cursor(self, line, col):$/;"	m	class:Conque
set_cursor	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueScreen
set_cursor	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def set_cursor(self, line, column):$/;"	m	class:ConqueSole
set_screen_width	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^    def set_screen_width(self, width):$/;"	m	class:ConqueScreen
set_window_size	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def set_window_size(self, width, height):$/;"	m	class:ConqueSoleSubprocess
setupStatusline	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:setupStatusline()$/;"	f
shellesc	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellesc(arg) abort$/;"	f
shellslash	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:shellslash(path)$/;"	f
shlex	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import shlex$/;"	i
shm	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    shm = None$/;"	v	class:ConqueSoleSharedMemory
shm_attributes	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleSubprocess
shm_attributes	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_attributes = None$/;"	v	class:ConqueSoleWrapper
shm_command	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        shm_command = ConqueSoleSharedMemory(CONQUE_SOLE_COMMANDS_SIZE, 'command', mem_key, serialize=True)$/;"	v
shm_command	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_command = None$/;"	v	class:ConqueSoleSubprocess
shm_command	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_command = None$/;"	v	class:ConqueSoleWrapper
shm_input	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_input = None$/;"	v	class:ConqueSoleSubprocess
shm_input	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_input = None$/;"	v	class:ConqueSoleWrapper
shm_key	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_key = ''$/;"	v	class:ConqueSoleWrapper
shm_output	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_output = None$/;"	v	class:ConqueSoleSubprocess
shm_output	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_output = None$/;"	v	class:ConqueSoleWrapper
shm_rescroll	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleSubprocess
shm_rescroll	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_rescroll = None$/;"	v	class:ConqueSoleWrapper
shm_resize	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_resize = None$/;"	v	class:ConqueSoleSubprocess
shm_resize	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_resize = None$/;"	v	class:ConqueSoleWrapper
shm_stats	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    shm_stats = None$/;"	v	class:ConqueSoleSubprocess
shm_stats	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    shm_stats = None$/;"	v	class:ConqueSoleWrapper
showMenu	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:showMenu()$/;"	f
signal	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def signal(self, signum):$/;"	m	class:ConqueSubprocess
signal	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import signal$/;"	i
sleep	bundle/conque-read-only/tests/profile.py	/^from time import sleep$/;"	i
sleep_time	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^        sleep_time = 0.01$/;"	v
snipMate#expandSnip	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#expandSnip(snip, col)$/;"	f
snipMate#jumpTabStop	bundle/snipmate.vim/autoload/snipMate.vim	/^fun snipMate#jumpTabStop(backwards)$/;"	f
snippets_dir	bundle/snipmate.vim/plugin/snipMate.vim	/^	let snippets_dir = substitute(globpath(&rtp, 'snippets\/'), "\\n", ',', 'g')$/;"	v
stdin	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    stdin = None$/;"	v	class:ConqueSoleSubprocess
stdout	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    stdout = None$/;"	v	class:ConqueSoleSubprocess
stripMarkupFromLine	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:stripMarkupFromLine(line, removeLeadingSpaces)$/;"	f
struct	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import struct$/;"	i
stylesheetTag	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:stylesheetTag()$/;"	f
stylesheetType	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:stylesheetType()$/;"	f
sub	bundle/conque-read-only/tests/api.vim	/^let sub = conque_term#subprocess('bash')$/;"	v
sub	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:sub(str,pat,rep) abort$/;"	f
subtype	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:subtype()$/;"	f
sys	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import sys$/;"	i
sys	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^import sys$/;"	i
sys	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^import sys$/;"	i
tabpagevar	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:tabpagevar(tabnr, var)$/;"	f
tabstops	bundle/conque-read-only/autoload/conque_term/conque.py	/^    tabstops = []$/;"	v	class:Conque
tagbar#CloseWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#CloseWindow()$/;"	f
tagbar#OpenParents	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenParents()$/;"	f
tagbar#OpenWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#OpenWindow(...)$/;"	f
tagbar#RestoreSession	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#RestoreSession()$/;"	f
tagbar#SetFoldLevel	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#SetFoldLevel(...)$/;"	f
tagbar#StartDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StartDebug(...)$/;"	f
tagbar#StopDebug	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#StopDebug()$/;"	f
tagbar#ToggleWindow	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#ToggleWindow()$/;"	f
tagbar#autoopen	bundle/tagbar/autoload/tagbar.vim	/^function! tagbar#autoopen()$/;"	f
tagextras	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:tagextras()$/;"	f
term_obj.close	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.close() dict " {{{$/;"	f
term_obj.focus	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.focus() dict " {{{$/;"	f
term_obj.read	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.read(...) dict " {{{$/;"	f
term_obj.set_callback	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.set_callback(callback_func) dict " {{{$/;"	f
term_obj.write	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.write(...) dict " {{{$/;"	f
term_obj.writeln	bundle/conque-read-only/autoload/conque_term.vim	/^function! s:term_obj.writeln(...) dict " {{{$/;"	f
termios	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import termios$/;"	i
throw	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:throw(string) abort$/;"	f
time	bundle/conque-read-only/autoload/conque_term/conque.py	/^import time # DEBUG$/;"	i
time	bundle/conque-read-only/autoload/conque_term/conque_sole_communicator.py	/^import time$/;"	i
time	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^import time$/;"	i
time	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^import time$/;"	i
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_INFO
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CHAR_UNION
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:CONSOLE_SCREEN_BUFFER_INFO
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:COORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:FOCUS_EVENT_RECORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_RECORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:INPUT_UNION
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:KEY_EVENT_RECORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MEMORY_BASIC_INFORMATION
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MENU_EVENT_RECORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:MOUSE_EVENT_RECORD
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:PROCESS_INFORMATION
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SECURITY_ATTRIBUTES
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:SMALL_RECT
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:STARTUPINFO
to_str	bundle/conque-read-only/autoload/conque_term/conque_win32_util.py	/^    def to_str(self):$/;"	m	class:WINDOW_BUFFER_SIZE_RECORD
toggle	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggle(dir)$/;"	f
toggleIgnoreFilter	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleIgnoreFilter()$/;"	f
toggleShowBookmarks	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowBookmarks()$/;"	f
toggleShowFiles	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowFiles()$/;"	f
toggleShowHidden	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleShowHidden()$/;"	f
toggleZoom	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:toggleZoom()$/;"	f
toggleurlescape	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:toggleurlescape()$/;"	f
togglexmlescape	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:togglexmlescape()$/;"	f
top	bundle/conque-read-only/autoload/conque_term/conque.py	/^    top = 1 # relative to top of screen$/;"	v	class:Conque
top	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    top = 0$/;"	v	class:ConqueSoleSubprocess
traceback	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^import traceback # DEBUG$/;"	i
translate_color	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def translate_color(self, attr):$/;"	m	class:ConqueSole
treeExistsForBuf	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForBuf()$/;"	f
treeExistsForTab	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:treeExistsForTab()$/;"	f
tty	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^import tty$/;"	i
u	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^def u(str_val, str_encoding='utf-8', errors='strict'):$/;"	f
u	bundle/vim-repeat/autoload/repeat.vim	/^nnoremap <silent> u     :<C-U>call <SID>wrap('u',v:count)<CR>$/;"	m
uchr	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^def uchr(str):$/;"	f
unique	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:unique(list)$/;"	f
unwrap_tables	bundle/conque-read-only/autoload/conque_term/conque.py	/^    unwrap_tables = True$/;"	v	class:Conque
upDir	bundle/nerdtree/plugin/NERD_tree.vim	/^function! s:upDir(keepState)$/;"	f
update_window_size	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def update_window_size(self, force=False):$/;"	m	class:Conque
update_window_size	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def update_window_size(self):$/;"	m	class:ConqueSole
urlencode	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:urlencode(char)$/;"	f
urlmap	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:urlmap(char)$/;"	f
urltab	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:urltab(htmlesc)$/;"	f
urlv	bundle/vim-ragtag/plugin/ragtag.vim	/^function! s:urlv()$/;"	f
vim	bundle/conque-read-only/autoload/conque_term/conque.py	/^import vim$/;"	i
vim	bundle/conque-read-only/autoload/conque_term/conque_globals.py	/^    import vim$/;"	i
vim	bundle/conque-read-only/autoload/conque_term/conque_screen.py	/^import vim$/;"	i
vim	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^import vim$/;"	i
vim	bundle/conque-read-only/tests/profile.py	/^import vim$/;"	i
warn	bundle/vim-fugitive/plugin/fugitive.vim	/^function! s:warn(str)$/;"	f
wildignore_save	bundle/tagbar/autoload/tagbar.vim	/^    let wildignore_save = &wildignore$/;"	v
window_bottom	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    window_bottom = None$/;"	v	class:ConqueSole
window_height	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    window_height = 40$/;"	v	class:ConqueSoleSubprocess
window_resize	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSoleWrapper
window_resize	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def window_resize(self, lines, columns):$/;"	m	class:ConqueSubprocess
window_top	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    window_top = None$/;"	v	class:ConqueSole
window_width	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    window_width = 160$/;"	v	class:ConqueSoleSubprocess
working_columns	bundle/conque-read-only/autoload/conque_term/conque.py	/^    working_columns = 80 # can be changed by CSI ? 3 l\/h$/;"	v	class:Conque
working_lines	bundle/conque-read-only/autoload/conque_term/conque.py	/^    working_lines = 24 # can be changed by CSI r$/;"	v	class:Conque
wrap	bundle/vim-repeat/autoload/repeat.vim	/^function! s:wrap(command,count)$/;"	f
wrap	bundle/vim-surround/plugin/surround.vim	/^function! s:wrap(string,char,type,...)$/;"	f
wrap_cursor	bundle/conque-read-only/autoload/conque_term/conque.py	/^    wrap_cursor = False$/;"	v	class:Conque
wrapreg	bundle/vim-surround/plugin/surround.vim	/^function! s:wrapreg(reg,char,...)$/;"	f
write	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def write(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write	bundle/conque-read-only/autoload/conque_term/conque_sole_shared_memory.py	/^    def write(self, text, start=0):$/;"	m	class:ConqueSoleSharedMemory
write	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def write(self):$/;"	m	class:ConqueSoleSubprocess
write	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def write(self, text):$/;"	m	class:ConqueSoleWrapper
write	bundle/conque-read-only/autoload/conque_term/conque_subprocess.py	/^    def write(self, input):$/;"	m	class:ConqueSubprocess
write_buffered_ord	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def write_buffered_ord(self, chr):$/;"	m	class:Conque
write_expr	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def write_expr(self, expr, set_cursor=True, read=True):$/;"	m	class:Conque
write_latin1	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def write_latin1(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_ord	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def write_ord(self, input, set_cursor=True, read=True):$/;"	m	class:Conque
write_plain	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def write_plain(self, text):$/;"	m	class:ConqueSoleSubprocess
write_vk	bundle/conque-read-only/autoload/conque_term/conque_sole.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSole
write_vk	bundle/conque-read-only/autoload/conque_term/conque_sole_subprocess.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleSubprocess
write_vk	bundle/conque-read-only/autoload/conque_term/conque_sole_wrapper.py	/^    def write_vk(self, vk_code):$/;"	m	class:ConqueSoleWrapper
xterm_to_rgb	bundle/conque-read-only/autoload/conque_term/conque.py	/^    def xterm_to_rgb(self, color_code):$/;"	m	class:Conque
yS	bundle/vim-surround/plugin/surround.vim	/^  nmap yS  <Plug>YSurround$/;"	m
ySS	bundle/vim-surround/plugin/surround.vim	/^  nmap ySS <Plug>YSsurround$/;"	m
ySs	bundle/vim-surround/plugin/surround.vim	/^  nmap ySs <Plug>YSsurround$/;"	m
ys	bundle/vim-surround/plugin/surround.vim	/^  nmap ys  <Plug>Ysurround$/;"	m
yss	bundle/vim-surround/plugin/surround.vim	/^  nmap yss <Plug>Yssurround$/;"	m
